{"id":1124,"date":"2021-04-14T01:09:50","date_gmt":"2021-04-14T01:09:50","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1124"},"modified":"2023-07-03T13:09:30","modified_gmt":"2023-07-03T13:09:30","slug":"php-array_merge","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-array_merge\/","title":{"rendered":"PHP array_merge"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PHP <code>array_merge()<\/code> function to merge one or more arrays into one.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP array_merge() function<\/h2>\n\n\n\n<p>To merge one or more arrays into an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array\/\">array<\/a>, you use the <code>array_merge()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">array_merge ( <span class=\"hljs-keyword\">array<\/span> ...$arrays ) : <span class=\"hljs-keyword\">array<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>array_merge()<\/code> function accepts one or more arrays and returns a new array that contains the elements from the input arrays.<\/p>\n\n\n\n<p>The <code>array_merge()<\/code> function appends the elements of the next array to the last element of the previous one.<\/p>\n\n\n\n<p>When the elements in the input arrays have the string keys, the later value for that key will overwrite the previous one.<\/p>\n\n\n\n<p>However, if the <code>array_merge()<\/code> function will not overwrite the values with the same numeric keys. Instead, it renumbers the numeric keys starting from zero in the result array.<\/p>\n\n\n\n<p>Starting from PHP 7.4.0, you can call the <code>array_merge()<\/code> function without any arguments. In this case, the function will return an empty array.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP array_merge() function examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>array_merge()<\/code> function.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Simple array_merge() function example<\/h3>\n\n\n\n<p>The following example uses the <code>array_merge()<\/code> function to merge two arrays into one:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$server_side = &#91;<span class=\"hljs-string\">'PHP'<\/span>];\n\n$client_side = &#91;<span class=\"hljs-string\">'JavaScript'<\/span>, <span class=\"hljs-string\">'CSS'<\/span>, <span class=\"hljs-string\">'HTML'<\/span>];\n\n$full_stack = array_merge($server_side, $client_side);\n\nprint_r($full_stack);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; PHP\n    &#91;<span class=\"hljs-number\">1<\/span>] =&gt; JavaScript\n    &#91;<span class=\"hljs-number\">2<\/span>] =&gt; CSS\n    &#91;<span class=\"hljs-number\">3<\/span>] =&gt; HTML\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul class=\"wp-block-list\">\n<li>First, define two indexed arrays: <code>$server_side<\/code> and <code>$client_side<\/code>.<\/li>\n\n\n\n<li>Second, merge the <code>$server_side<\/code> and <code>$client_side<\/code> arrays into one array using the <code>array_merge()<\/code> function.<\/li>\n\n\n\n<li>Third, show the result array.<\/li>\n<\/ul>\n\n\n\n<p>As you can see clearly from the output, the <code>array_merge()<\/code> function renumbers the numeric keys of the elements in the result array.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">2) Using array_merge() function with string keys<\/h3>\n\n\n\n<p>The following example uses the <code>array_merge()<\/code> function with the array with the string keys:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$before = &#91;\n\t<span class=\"hljs-string\">'PHP'<\/span> =&gt; <span class=\"hljs-number\">2<\/span>,\n\t<span class=\"hljs-string\">'JavaScript'<\/span> =&gt; <span class=\"hljs-number\">4<\/span>,\n\t<span class=\"hljs-string\">'HTML'<\/span> =&gt; <span class=\"hljs-number\">4<\/span>,\n\t<span class=\"hljs-string\">'CSS'<\/span> =&gt; <span class=\"hljs-number\">3<\/span>\n];\n\n$after = &#91;\n\t<span class=\"hljs-string\">'PHP'<\/span> =&gt; <span class=\"hljs-number\">5<\/span>,\n\t<span class=\"hljs-string\">'JavaScript'<\/span> =&gt; <span class=\"hljs-number\">5<\/span>,\n\t<span class=\"hljs-string\">'MySQL'<\/span> =&gt; <span class=\"hljs-number\">4<\/span>,\n];\n\n$skills = array_merge($before, $after);\n\nprint_r($skills);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;PHP] =&gt; <span class=\"hljs-number\">5<\/span>\n    &#91;JavaScript] =&gt; <span class=\"hljs-number\">5<\/span>\n    &#91;HTML] =&gt; <span class=\"hljs-number\">4<\/span>\n    &#91;CSS] =&gt; <span class=\"hljs-number\">3<\/span>\n    &#91;MySQL] =&gt; <span class=\"hljs-number\">4<\/span>\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because both <code>$before<\/code> and <code>$after<\/code> arrays have the same elements with the same string keys <code>PHP<\/code> and <code>JavaScript<\/code>, the elements in the <code>$after<\/code> array overwrites the ones in the <code>$before<\/code> array.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\">\n<li>Use the PHP <code>array_merge()<\/code> function to merge elements of two or more arrays into a single array.<\/li>\n<\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1124\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array_merge\/\"\n\t\t\t\tdata-post-title=\"PHP array_merge\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1124\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array_merge\/\"\n\t\t\t\tdata-post-title=\"PHP array_merge\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the PHP array_merge() function to merge one or more arrays into one.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":54,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1124","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1124","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1124"}],"version-history":[{"count":3,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1124\/revisions"}],"predecessor-version":[{"id":2909,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1124\/revisions\/2909"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1124"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}