{"id":64,"date":"2021-03-08T00:08:55","date_gmt":"2021-03-08T00:08:55","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=64"},"modified":"2021-06-26T13:59:09","modified_gmt":"2021-06-26T13:59:09","slug":"php-while","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-while\/","title":{"rendered":"PHP while"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PHP <code>while<\/code> statement to execute a code block repeatedly as long as a condition is <code>true<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP while statement<\/h2>\n\n\n\n<p>The <code>while<\/code> statement executes a code block as long as an <code>expression<\/code> is <code>true<\/code>. The syntax of the <code>while<\/code> statement is as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-keyword\">while<\/span> (expression) {\n\tstatement;\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, PHP evaluates the <code>expression<\/code>. If the result is <code>true<\/code>, PHP executes the <code>statement<\/code>. <\/li><li>Then, PHP re-evaluates the <code>expression<\/code> again. If it&#8217;s still <code>true<\/code>, PHP executes the statement again. However, if the <code>expression<\/code> is <code>false<\/code>, the loop ends.<\/li><\/ul>\n\n\n\n<p>If the <code>expression<\/code> evaluates to <code>false<\/code> before the first iteration starts, the loop ends immediately.<\/p>\n\n\n\n<p>Since PHP evaluates the <code>expression<\/code> before each iteration, the <code>while<\/code> loop is also known as a <strong>pretest loop<\/strong>.<\/p>\n\n\n\n<p>The <code>while<\/code> doesn&#8217;t require curly braces if you have one statement in the loop body:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-keyword\">while<\/span> (expression)\n\tstatement;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, it&#8217;s a good practice to always include curly braces with the <code>while<\/code> statement even though you have one statement to execute.<\/p>\n\n\n\n<p>The following flowchart illustrates how the <code>while<\/code> statement works:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"198\" height=\"384\" src=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/03\/php-while.png\" alt=\"PHP while\" class=\"wp-image-408\" srcset=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/03\/php-while.png 198w, https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/03\/php-while-155x300.png 155w\" sizes=\"auto, (max-width: 198px) 100vw, 198px\" \/><\/figure><\/div>\n\n\n\n<h2 class=\"wp-block-heading\">PHP while loop example<\/h2>\n\n\n\n<p>The following example uses a <code>while<\/code> loop to add whole numbers from 1 to 10:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$total = <span class=\"hljs-number\">0<\/span>;\n$number = <span class=\"hljs-number\">1<\/span>;\n\n<span class=\"hljs-keyword\">while<\/span> ($number &lt;= <span class=\"hljs-number\">10<\/span>) {\n\t$total += $number;\n\t$number++;\n}\n\n<span class=\"hljs-keyword\">echo<\/span> $total;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">55<\/code><\/span><\/pre>\n\n\n<h2 class=\"wp-block-heading\">The alternative syntax for the PHP while loop<\/h2>\n\n\n\n<p>The alternative syntax for the while statement is as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-keyword\">while<\/span> (expression):\n\tstatement;\n<span class=\"hljs-keyword\">endwhile<\/span>;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following uses the alternative syntax of the <code>while<\/code> statement to sum the whole numbers from 1 to 10.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$total = <span class=\"hljs-number\">0<\/span>;\n$number = <span class=\"hljs-number\">1<\/span>;\n\n<span class=\"hljs-keyword\">while<\/span> ($number &lt;= <span class=\"hljs-number\">10<\/span>) :\n\t$total += $number;\n\t$number++;\n<span class=\"hljs-keyword\">endwhile<\/span>;\n\n<span class=\"hljs-keyword\">echo<\/span> $total;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">55<\/code><\/span><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the PHP while loop statement to execute a code block as long as a condition is true.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"64\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-while\/\"\n\t\t\t\tdata-post-title=\"PHP while\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"64\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-while\/\"\n\t\t\t\tdata-post-title=\"PHP while\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn how to use the PHP while statement to execute a code block repeatedly as long as a condition is true. Introduction to the PHP while statement The while statement executes a code block as long as an expression is true. The syntax of the while statement is as [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":30,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-64","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/64","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=64"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/64\/revisions"}],"predecessor-version":[{"id":1991,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/64\/revisions\/1991"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=64"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}