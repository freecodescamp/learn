{"id":140,"date":"2021-03-08T00:28:58","date_gmt":"2021-03-08T00:28:58","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=140"},"modified":"2021-07-08T04:19:51","modified_gmt":"2021-07-08T04:19:51","slug":"php-pdo-select","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-pdo\/php-pdo-select\/","title":{"rendered":"PDO Querying Data"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn to query data from a table using PHP PDO using the <code>query()<\/code> method of the <code>PDO<\/code> object and a prepared statement.<\/p>\n\n\n\n<p>To select data from a table using PDO, you can use:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>The <code>query()<\/code> method of a PDO object.<\/li><li>Or a <a href=\"https:\/\/www.CodeCamp\/php-pdo\/php-prepared-statement\/\">prepared statement<\/a>.<\/li><\/ul>\n\n\n\n<p>When a query doesn&#8217;t have any parameters, you can use the <code>query()<\/code> method. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><span><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> * <span class=\"hljs-keyword\">FROM<\/span> publishers;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, if a query accepts one or more parameters, you should use a prepared statement for security reasons.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Using the query() method to select data from a table<\/h2>\n\n\n\n<p>To query data from a table using the <code>query()<\/code> method, you follow these steps:<\/p>\n\n\n\n<ol class=\"wp-block-list\"><li><a href=\"https:\/\/www.CodeCamp\/php-pdo\/pdo-connecting-to-mysql\/\">Create a database connection to the database server<\/a>.<\/li><li>Execute a <code>SELECT<\/code> statement by passing it to the <code>query()<\/code> method of a <code>PDO<\/code> object. <\/li><\/ol>\n\n\n\n<p>The <code>query()<\/code> method returns a <code>PDOStatement<\/code> object. If an error occurs, the <code>query()<\/code> method returns <code>false<\/code>. <\/p>\n\n\n\n<p>The following illustrates how to query all rows from the <code>publishers<\/code> table in the <code>bookdb<\/code> database:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;\r\n\r\n$sql = <span class=\"hljs-string\">'SELECT publisher_id, name \r\n\t\tFROM publishers'<\/span>;\r\n\r\n$statement = $pdo-&gt;query($sql);\r\n\r\n<span class=\"hljs-comment\">\/\/ get all publishers<\/span>\r\n$publishers = $statement-&gt;fetchAll(PDO::FETCH_ASSOC);\r\n\r\n<span class=\"hljs-keyword\">if<\/span> ($publishers) {\r\n\t<span class=\"hljs-comment\">\/\/ show the publishers<\/span>\r\n\t<span class=\"hljs-keyword\">foreach<\/span> ($publishers <span class=\"hljs-keyword\">as<\/span> $publisher) {\r\n\t\t<span class=\"hljs-keyword\">echo<\/span> $publisher&#91;<span class=\"hljs-string\">'name'<\/span>] . <span class=\"hljs-string\">'&lt;br&gt;'<\/span>;\r\n\t}\r\n}\n<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">McGraw-Hill Education\nPenguin\/Random House\nHachette Book Group\nHarper Collins\nSimon and Schuster<\/code><\/span><\/pre>\n\n\n<p>When you use the <code>PDO::FETCH_ASSOC<\/code> mode, the <code>PDOStatement<\/code> returns an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-associative-arrays\/\">associative array<\/a> of elements in which the key of each element is the column name of the result set.<\/p>\n\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, create a database connection to the <code>bookdb<\/code> database:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, define an SQL <code>SELECT<\/code> statement to select all rows from <code>publishers<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$sql = <span class=\"hljs-string\">'SELECT publisher_id, name FROM publishers'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, run the query by calling the <code>query()<\/code> method of the PDO object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$statement = $pdo-&gt;query($sql);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, fetch all data from the result set:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$publishers = $statement-&gt;fetchAll(PDO::FETCH_ASSOC);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>fetchAll()<\/code> method with the <code>PDO::FETCH_ASSOC<\/code> option returns an associative array of data where:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>The keys are the names that appear on the select list<\/li><li>and the values are the data rows in the result set.<\/li><\/ul>\n\n\n\n<p>Finally, iterate over the result set and show the array&#8217;s element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-comment\">\/\/ show the publishers<\/span>\n<span class=\"hljs-keyword\">if<\/span> ($publishers) {\n\t<span class=\"hljs-keyword\">foreach<\/span> ($publishers <span class=\"hljs-keyword\">as<\/span> $publisher) {\n\t\t<span class=\"hljs-keyword\">echo<\/span> $publisher&#91;<span class=\"hljs-string\">'name'<\/span>] . <span class=\"hljs-string\">'&lt;br&gt;'<\/span>;\n\t}\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Using a prepared statement to query data<\/h2>\n\n\n\n<p>The following example illustrates how to use a prepared statement to query data from a table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$publisher_id = <span class=\"hljs-number\">1<\/span>;\r\n\r\n<span class=\"hljs-comment\">\/\/ connect to the database and select the publisher<\/span>\r\n$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;\r\n\r\n$sql = <span class=\"hljs-string\">'SELECT publisher_id, name \r\n\t\tFROM publishers\r\n        WHERE publisher_id = :publisher_id'<\/span>;\r\n\r\n$statement = $pdo-&gt;prepare($sql);\r\n$statement-&gt;bindParam(<span class=\"hljs-string\">':publisher_id'<\/span>, $publisher_id, PDO::PARAM_INT);\r\n$statement-&gt;execute();\r\n$publisher = $statement-&gt;fetch(PDO::FETCH_ASSOC);\r\n\r\n<span class=\"hljs-keyword\">if<\/span> ($publisher) {\r\n\t<span class=\"hljs-keyword\">echo<\/span> $publisher&#91;<span class=\"hljs-string\">'publisher_id'<\/span>] . <span class=\"hljs-string\">'.'<\/span> . $publisher&#91;<span class=\"hljs-string\">'name'<\/span>];\r\n} <span class=\"hljs-keyword\">else<\/span> {\r\n\t<span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">\"The publisher with id $publisher_id was not found.\"<\/span>;\r\n}\r\n\n<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, define a publisher id. In practice, you may get it from the query string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$publisher_id = <span class=\"hljs-number\">1<\/span>;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, use the <code>connect.php<\/code> to connect to the <code>bookdb<\/code> database and return a new instance of the PDO object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, construct an SQL SELECT statement with a named placeholder (<code>:publisher_id<\/code>)<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$sql = <span class=\"hljs-string\">'SELECT publisher_id, name \n\t\tFROM publishers\n        WHERE publisher_id = :publisher_id'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, bind the value of the id to the prepared statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$statement-&gt;bindParam(<span class=\"hljs-string\">':publisher_id'<\/span>, $publisher_id, PDO::PARAM_INT);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fifth, execute the prepared statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$statement-&gt;execute();<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Sixth, fetch a row from the result set into an associative array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$publisher = $statement-&gt;fetch(PDO::FETCH_ASSOC);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, show the publisher information or an error message:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">if<\/span> ($publisher) {\n\t<span class=\"hljs-keyword\">echo<\/span> $publisher&#91;<span class=\"hljs-string\">'publisher_id'<\/span>] . <span class=\"hljs-string\">'.'<\/span> . $publisher&#91;<span class=\"hljs-string\">'name'<\/span>];\n} <span class=\"hljs-keyword\">else<\/span> {\n\t<span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">\"The publisher with id $publisher_id was not found.\"<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the <code>query()<\/code> method of an PDO object to execute a <code>SELECT<\/code> statement to query data from one or more tables.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"140\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-pdo\/php-pdo-select\/\"\n\t\t\t\tdata-post-title=\"PDO Querying Data\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"140\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-pdo\/php-pdo-select\/\"\n\t\t\t\tdata-post-title=\"PDO Querying Data\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn to query data from a table using PHP PDO using the query() method of the PDO object and a prepared statement.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":21,"menu_order":9,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-140","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/140","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=140"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/140\/revisions"}],"predecessor-version":[{"id":2167,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/140\/revisions\/2167"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/21"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=140"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}