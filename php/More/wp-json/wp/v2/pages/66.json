{"id":66,"date":"2021-03-08T00:09:39","date_gmt":"2021-03-08T00:09:39","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=66"},"modified":"2022-09-07T00:05:42","modified_gmt":"2022-09-07T00:05:42","slug":"php-do-while","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-do-while\/","title":{"rendered":"PHP do&#8230;while"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PHP <code>do...while<\/code> loop statement to execute a code block repeatedly.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to PHP do&#8230;while loop statement<\/h2>\n\n\n\n<p>The PHP <code>do...while<\/code>&nbsp;statement allows you to execute a code block repeatedly based on a Boolean expression. Here&#8217;s the syntax of the PHP <code>do-while<\/code> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-keyword\">do<\/span> {\n\tstatement;\n} <span class=\"hljs-keyword\">while<\/span> (expression);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Unlike the <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-do-while\/\">while<\/a><\/code> statement, PHP evaluates the <code>expression<\/code> at the end of each iteration. It means that the loop always executes at least once, even the <code>expression<\/code> is <code>false<\/code> before the loop enters.<\/p>\n\n\n\n<p>The following flowchart illustrates how the <code>do...while<\/code> statement works:<\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"167\" height=\"380\" src=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/03\/php-do-while.png\" alt=\"\" class=\"wp-image-411\" srcset=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/03\/php-do-while.png 167w, https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/03\/php-do-while-132x300.png 132w\" sizes=\"auto, (max-width: 167px) 100vw, 167px\" \/><\/figure><\/div>\n\n\n<h2 class=\"wp-block-heading\">do&#8230;while vs. while<\/h2>\n\n\n\n<p>The differences between the <code>do...while<\/code>&nbsp;and <code>while<\/code> statements are:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>PHP executes the statement in <code>do...while<\/code> at least once,&nbsp;whereas&nbsp;it won&#8217;t execute the <code>statement<\/code> in the <code>while<\/code> statement if the <code>expression<\/code> is <code>false<\/code>.<\/li><li>PHP evaluates the <code>expression<\/code> in the <code>do...while<\/code>&nbsp;statement at the end of each iteration. Conversely, PHP evaluates the <code>expression<\/code> in the <code>while<\/code> statement at the beginning of each iteration.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">PHP do&#8230;while loop statement example<\/h2>\n\n\n\n<p>In the following example, the code block inside the <code>do...while<\/code>&nbsp;loop statement executes precisely one time.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$i = <span class=\"hljs-number\">0<\/span>;\n<span class=\"hljs-keyword\">do<\/span> {\n <span class=\"hljs-keyword\">echo<\/span> $i;\n} <span class=\"hljs-keyword\">while<\/span> ($i &gt; <span class=\"hljs-number\">0<\/span>);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The code inside the loop body executes first to display the variable <code>$i<\/code>. Because the value of the <code>$i<\/code>&nbsp;is 0, the condition is met, the loop stops.<\/p>\n\n\n\n<p>In the following example, the code block inside the <code>do...while<\/code>&nbsp;loop executes ten times:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$i = <span class=\"hljs-number\">10<\/span>;\n\n<span class=\"hljs-keyword\">do<\/span> {\n    <span class=\"hljs-keyword\">echo<\/span> $i  . <span class=\"hljs-string\">'&lt;br&gt;'<\/span>;\n    $i--;\n} <span class=\"hljs-keyword\">while<\/span> ($i &gt; <span class=\"hljs-number\">0<\/span>);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned how to use PHP <code>do...while<\/code>&nbsp;loop statement to execute a code block repeatedly until a condition is <code>false<\/code>.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"66\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-do-while\/\"\n\t\t\t\tdata-post-title=\"PHP do&#8230;while\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"66\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-do-while\/\"\n\t\t\t\tdata-post-title=\"PHP do&#8230;while\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the PHP do-while loop statement to execute a code block repeatedly<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":31,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-66","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/66","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=66"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/66\/revisions"}],"predecessor-version":[{"id":2887,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/66\/revisions\/2887"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=66"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}