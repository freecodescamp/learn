{"id":434,"date":"2021-03-15T08:23:10","date_gmt":"2021-03-15T08:23:10","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=434"},"modified":"2021-03-15T08:23:38","modified_gmt":"2021-03-15T08:23:38","slug":"php-not-operator","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-not-operator\/","title":{"rendered":"PHP NOT operator"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PHP NOT operator (!) to build complex logical expressions.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP NOT operator<\/h2>\n\n\n\n<p>Unlike the logical <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-and-operator\/\">AND<\/a> and <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-or-operator\/\">OR<\/a> operators that accept two operands, the logical NOT operator accepts only one operand and negates the operand. <\/p>\n\n\n\n<p>In other words, the logical NOT operator returns <code>true<\/code> if the operand is <code>false<\/code> and returns <code>false<\/code> if the operand is <code>true<\/code>.<\/p>\n\n\n\n<p>PHP uses the both <code>not<\/code> keyword and (<code>!<\/code>) to represent the logical NOT operator.<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">not expression<\/code><\/span><\/pre>\n\n\n<p>Or <\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">! expression<\/code><\/span><\/pre>\n\n\n<p>The following table illustrates the result of the logical NOT operator:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Expression<\/th><th>not Expression<\/th><\/tr><\/thead><tbody><tr><td><code>true<\/code><\/td><td><code>false<\/code><\/td><\/tr><tr><td><code>false<\/code><\/td><td><code>true<\/code><\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>The logical NOT operator is also known as the logical negation operator.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP NOT operator examples<\/h2>\n\n\n\n<p>The following example illustrates how to use the logical not operator (<code>!<\/code>):<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$priority = <span class=\"hljs-number\">5<\/span>;\r\nvar_dump( ! $priority &lt; <span class=\"hljs-number\">5<\/span> );<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">bool(<span class=\"hljs-literal\">true<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, PHP evaluate the expression <code>! $priority &lt; 5<\/code> in the following order:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, <code>$priority &lt; 5<\/code> evaluates to <code>false<\/code>.<\/li><li>Second, <code>! false<\/code> evaluates to <code>true<\/code>.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>PHP NOT operator (<code>not<\/code>, <code>!<\/code>)  accepts an operand and negate the result of the operand.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"434\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-not-operator\/\"\n\t\t\t\tdata-post-title=\"PHP NOT operator\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"434\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-not-operator\/\"\n\t\t\t\tdata-post-title=\"PHP NOT operator\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn how to use the PHP NOT operator (!) to build complex logical expressions. Introduction to the PHP NOT operator Unlike the logical AND and OR operators that accept two operands, the logical NOT operator accepts only one operand and negates the operand. In other words, the logical NOT [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":22,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-434","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/434","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=434"}],"version-history":[{"count":1,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/434\/revisions"}],"predecessor-version":[{"id":435,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/434\/revisions\/435"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=434"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}