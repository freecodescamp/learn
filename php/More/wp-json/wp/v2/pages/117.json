{"id":117,"date":"2021-03-08T00:23:41","date_gmt":"2021-03-08T00:23:41","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=117"},"modified":"2021-04-19T03:10:27","modified_gmt":"2021-04-19T03:10:27","slug":"php-file","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-file\/","title":{"rendered":"PHP file() Function"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PHP <code>file()<\/code> function to read the entire file into an array.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP file() function<\/h2>\n\n\n\n<p>The <code>file()<\/code> function reads an entire file specified by a <code>$filename<\/code> into an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array\/\">array<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">file ( string $filename , int $flags = <span class=\"hljs-number\">0<\/span> , resource $context = ? ) : <span class=\"hljs-keyword\">array<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>file()<\/code> function has three parameters:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$filename<\/code> is the path to the file.<\/li><li><code>$flags<\/code> is an optional parameter that can be one or more of the constants below.<\/li><li><code>$context<\/code> is a valid stream context resource.<\/li><\/ul>\n\n\n\n<p>The following table shows the values for the <code>$flags<\/code>:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Flag<\/th><th>Meaning<\/th><\/tr><\/thead><tbody><tr><td><code>FILE_USE_INCLUDE_PATH<\/code><\/td><td>Search for the file in the include path.<\/td><\/tr><tr><td><code>FILE_IGNORE_NEW_LINES<\/code><\/td><td>Skip the newline at the end of the array element.<\/td><\/tr><tr><td><code>FILE_SKIP_EMPTY_LINES<\/code><\/td><td>Skip empty lines in the file.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>The <code>file()<\/code> function returns an array in which each element corresponds to a line of the file. If you don&#8217;t want to include the newline character in each array element, you can use the <code>FILE_IGNORE_NEW_LINES<\/code> flag. <\/p>\n\n\n\n<p>To skip empty lines, you can use the FILE_SKIP_EMPTY_LINES option.<\/p>\n\n\n\n<p>Note that the <code>file()<\/code> function also works with a remote file using the HTTP or FTP protocol.<\/p>\n\n\n\n<p>To read the entire file into a string, you can use the <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-file_get_contents\/\">file_get_contents()<\/a><\/code> function.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP file() function example<\/h2>\n\n\n\n<p>The following example uses the <code>file()<\/code> function to read the <code>robots.txt<\/code> file from the <code>php.net<\/code> into an array and display its contents line by line:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$lines = file(\r\n    <span class=\"hljs-string\">'https:\/\/www.php.net\/robots.txt'<\/span>,\r\n    FILE_SKIP_EMPTY_LINES | FILE_IGNORE_NEW_LINES\r\n);\r\n\r\n\r\n<span class=\"hljs-keyword\">if<\/span> ($lines) {\r\n    <span class=\"hljs-keyword\">foreach<\/span> ($lines <span class=\"hljs-keyword\">as<\/span> $line) {\r\n        <span class=\"hljs-keyword\">echo<\/span> htmlspecialchars($line) . PHP_EOL;\r\n    }\r\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you run the script behind a proxy, it won&#8217;t work and issue the following error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">Warning: file(http:\/\/www.php.net\/robots.txt): failed to open stream: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respon in ...\\file.php on line 5<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To fix it, you need to create a new stream context and set the proxy like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$options = &#91;\r\n    <span class=\"hljs-string\">'http'<\/span>=&gt;&#91;\r\n      <span class=\"hljs-string\">'method'<\/span>=&gt;<span class=\"hljs-string\">\"GET\"<\/span>,\r\n      <span class=\"hljs-string\">'header'<\/span>=&gt;<span class=\"hljs-string\">\"Accept-language: en\\r\\n\"<\/span>,\r\n      <span class=\"hljs-string\">'proxy'<\/span>=&gt;<span class=\"hljs-string\">\"tcp:\/\/&lt;proxy_ip&gt;:&lt;proxy_port&gt;\"<\/span>\r\n    ]\r\n];\r\n\r\n$context = stream_context_create($options);\r\n\r\n$lines = file(\r\n    <span class=\"hljs-string\">'https:\/\/www.php.net\/robots.txt'<\/span>,\r\n    FILE_SKIP_EMPTY_LINES | FILE_IGNORE_NEW_LINES,\r\n    $context\r\n);\r\n\r\n\r\n<span class=\"hljs-keyword\">if<\/span> ($lines) {\r\n    <span class=\"hljs-keyword\">foreach<\/span> ($lines <span class=\"hljs-keyword\">as<\/span> $line) {\r\n        <span class=\"hljs-keyword\">echo<\/span> htmlspecialchars($line) . PHP_EOL;\r\n    }\r\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this code, you need to replace the <code>&lt;proxy_ip><\/code> and <code>&lt;proxy_port><\/code> with your current proxy.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the PHP <code>file()<\/code> to read the contents of a local or remote file into an array. Each line of the file will be an element of the array.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"117\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-file\/\"\n\t\t\t\tdata-post-title=\"PHP file() Function\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"117\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-file\/\"\n\t\t\t\tdata-post-title=\"PHP file() Function\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the PHP file() function to read the entire file into an array.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":154,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-117","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/117","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=117"}],"version-history":[{"count":12,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/117\/revisions"}],"predecessor-version":[{"id":1237,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/117\/revisions\/1237"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=117"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}