{"id":46,"date":"2021-03-07T14:30:39","date_gmt":"2021-03-07T14:30:39","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=46"},"modified":"2021-11-03T14:29:10","modified_gmt":"2021-11-03T14:29:10","slug":"php-data-types","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-data-types\/","title":{"rendered":"PHP Data Types"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about PHP data types including scalar types, compound types, and special types.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to PHP data types<\/h2>\n\n\n\n<p>A type specifies the amount of memory that allocates to a value associated with it. A type also determines the operations that you can perform on it.<\/p>\n\n\n\n<p>PHP has ten primitive types including four scala types, four compound types, and two special types:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img decoding=\"async\" src=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/03\/PHP-types.svg\" alt=\"PHP Types\" class=\"wp-image-809\"\/><\/figure><\/div>\n\n\n\n<h3 class=\"wp-block-heading\">Scalar types<\/h3>\n\n\n\n<ul class=\"wp-block-list\"><li><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-boolean\/\">bool<\/a><\/li><li><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-int\/\">int<\/a><\/li><li><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-float\/\">float<\/a><\/li><li><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-string\/\">string<\/a><\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\">Compound types<\/h3>\n\n\n\n<ul class=\"wp-block-list\"><li><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array\/\">array<\/a><\/li><li><a href=\"https:\/\/www.CodeCamp\/php-oop\/php-objects\/\">object<\/a><\/li><li>callable<\/li><li>iterable<\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\">Special types<\/h3>\n\n\n\n<ul class=\"wp-block-list\"><li>resource<\/li><li><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-null\/\">null<\/a><\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Scalar types<\/h2>\n\n\n\n<p>A variable is a scalar when it holds a single value of the type integer, float, string, or boolean. <\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Integer<\/h3>\n\n\n\n<p>Integers are whole numbers defined in the set {\u2026-3,-2-,-1,0,1,2,3\u2026}.&nbsp; The size of the integer depends on the platform where PHP runs.<\/p>\n\n\n\n<p>The constant <code>PHP_INT_SIZE<\/code>&nbsp;specifies&nbsp;the size of the integer on a specific platform. PHP uses the int keyword to denote the integer type.<\/p>\n\n\n\n<p>The following example illustrates some integers:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$count = <span class=\"hljs-number\">0<\/span>;\n$max = <span class=\"hljs-number\">1000<\/span>;\n$page_size = <span class=\"hljs-number\">10<\/span>;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Float<\/h3>\n\n\n\n<p>Floats are floating-point numbers, which are also known as floats, doubles, or real numbers. <\/p>\n\n\n\n<p>PHP uses the <a href=\"http:\/\/en.wikipedia.org\/wiki\/Double-precision_floating-point_format\" target=\"_blank\" rel=\"noreferrer noopener\">IEEE 754 double format<\/a> to represent floats. Like other programming languages, floats have limited precision. <\/p>\n\n\n\n<p>PHP uses the <code>float<\/code> keyword to represent the floating-point numbers. The following example illustrates the floating-point numbers in PHP:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$price = <span class=\"hljs-number\">10.25<\/span>;\n$tax = <span class=\"hljs-number\">0.08<\/span>;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Boolean<\/h3>\n\n\n\n<p>Boolean represents a truth value that can be either <code>true<\/code> or <code>false<\/code>. PHP uses the <code>bool<\/code> keyword to represent the Boolean type. <\/p>\n\n\n\n<p>The bool type has two values <code>true<\/code> and <code>false<\/code>. Since keywords are case-insensitive, you can use <code>true<\/code>, <code>True<\/code>, <code>TRUE<\/code>, <code>false<\/code>, <code>False<\/code>, and <code>False<\/code> to indicate boolean values. <\/p>\n\n\n\n<p>The following example shows how to assign Boolean values to variables:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$is_admin = <span class=\"hljs-keyword\">true<\/span>;\n$is_user_logged_in = <span class=\"hljs-keyword\">false<\/span>;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you use the values of other types in the boolean context, such as <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-if\/\">if-else<\/a> and <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-switch\/\">switch-case<\/a> statements, PHP converts them to the boolean values. <\/p>\n\n\n\n<p>PHP treats the following values as <code>false<\/code>:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>The <code>false<\/code> keyword.<\/li><li>The integer&nbsp;0 and -0 (zero).<\/li><li>The&nbsp;floats 0.0 and -0.0 (zero).<\/li><li>The empty&nbsp;string  (<code>\"\"<\/code>, <code>''<\/code>) and the&nbsp;string&nbsp;&#8220;0&#8221;.<\/li><li>The empty array&nbsp;(<code>array()<\/code> or <code>[]<\/code>).<\/li><li>The <code>null<\/code>.<\/li><li>The <code>SimpleXML<\/code>&nbsp;objects created from attributeless empty elements.<\/li><\/ul>\n\n\n\n<p>The values that are not one of these falsy values above are <code>true<\/code>.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">String<\/h3>\n\n\n\n<p>A string is a sequence of characters surrounded by single quotes (&#8216;) or double quotes (&#8220;). For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$str = <span class=\"hljs-string\">'PHP scalar type'<\/span>;\n$message = <span class=\"hljs-string\">\"PHP data types\"<\/span>;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Compound types<\/h2>\n\n\n\n<p>Compound data includes the values that contain more than one value. PHP has two compound types including array and object. <\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Array<\/h3>\n\n\n\n<p>An array is an ordered map that associates keys with values. For example, you can define a list of items in a shopping cart like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$carts = &#91; <span class=\"hljs-string\">'laptop'<\/span>, <span class=\"hljs-string\">'mouse'<\/span>, <span class=\"hljs-string\">'keyboard'<\/span> ];<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>$carts<\/code> array contains three string values. It maps the index <code>0<\/code>, <code>1<\/code>, and <code>2<\/code> to the values <code>'laptop'<\/code>, <code>'mouse'<\/code>, and <code>'keyboard'<\/code>. The <code>$carts<\/code> is called an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array\/\">indexed array<\/a> because it uses numeric indexes as keys.<\/p>\n\n\n\n<p>To access a value in an array, you use the square brackets:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-keyword\">echo<\/span> $carts&#91;<span class=\"hljs-number\">0<\/span>]; <span class=\"hljs-comment\">\/\/ 'laptop'<\/span>\n<span class=\"hljs-keyword\">echo<\/span> $carts&#91;<span class=\"hljs-number\">1<\/span>]; <span class=\"hljs-comment\">\/\/ 'mouse'<\/span>\n<span class=\"hljs-keyword\">echo<\/span> $carts&#91;<span class=\"hljs-number\">2<\/span>]; <span class=\"hljs-comment\">\/\/ 'keyboard'<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Besides numeric indexes, you can use strings as keys for the array elements. These arrays are known as <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-associative-arrays\/\">associative arrays<\/a>. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$prices = &#91;\n   <span class=\"hljs-string\">'laptop'<\/span> =&gt; <span class=\"hljs-number\">1000<\/span>,\n   <span class=\"hljs-string\">'mouse'<\/span> =&gt; <span class=\"hljs-number\">50<\/span>,\n   <span class=\"hljs-string\">'keyboard'<\/span> =&gt; <span class=\"hljs-number\">120<\/span>\n];<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To access an element in an associative array, you specify the key in the square brackets. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-keyword\">echo<\/span> $prices&#91;<span class=\"hljs-string\">'laptop'<\/span>]; <span class=\"hljs-comment\">\/\/ 1000<\/span>\n<span class=\"hljs-keyword\">echo<\/span> $prices&#91;<span class=\"hljs-string\">'mouse'<\/span>]; <span class=\"hljs-comment\">\/\/ 50<\/span>\n<span class=\"hljs-keyword\">echo<\/span> $prices&#91;<span class=\"hljs-string\">'keyboard'<\/span>]; <span class=\"hljs-comment\">\/\/ 120<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Object<\/h3>\n\n\n\n<p>An object is an instance of a class. It&#8217;s a central concept in <a href=\"https:\/\/www.CodeCamp\/php-oop\/\">object-oriented programming<\/a>. <\/p>\n\n\n\n<p>An object has properties. For example, a person object may have the first name, last name, and age properties. <\/p>\n\n\n\n<p>An object also has behaviors, which are known as methods. For example, a person object can have a method called <code>getFullName()<\/code> that returns the full name.<\/p>\n\n\n\n<p>To learn more about objects, check out the <a href=\"https:\/\/www.CodeCamp\/php-oop\/php-objects\/\">object tutorial<\/a>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Special types<\/h2>\n\n\n\n<p>PHP has two special types: null and resource<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Null<\/h3>\n\n\n\n<p>The <code>null<\/code> type has one value called <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-null\/\">null<\/a> that represents a variable with no value.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Resource<\/h3>\n\n\n\n<p>The resource type holds a reference to an external resource, e.g. a filehandle or a <a href=\"https:\/\/www.CodeCamp\/php-pdo\/php-pdo-transaction\/\">database connection<\/a>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>PHP has four scalar types, four compound types, and two special types.<\/li><li>Scale types: integer, float, string, and boolean.<\/li><li>Compound types: array and object.<\/li><li>Special types: null and resource.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"46\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-data-types\/\"\n\t\t\t\tdata-post-title=\"PHP Data Types\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"46\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-data-types\/\"\n\t\t\t\tdata-post-title=\"PHP Data Types\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn about PHP data types including scalar types, compound types, and special types. Introduction to PHP data types A type specifies the amount of memory that allocates to a value associated with it. A type also determines the operations that you can perform on it. PHP has ten primitive [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":8,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-46","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/46","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=46"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/46\/revisions"}],"predecessor-version":[{"id":2831,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/46\/revisions\/2831"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=46"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}