{"id":1079,"date":"2021-04-13T00:26:44","date_gmt":"2021-04-13T00:26:44","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1079"},"modified":"2021-10-31T06:56:52","modified_gmt":"2021-10-31T06:56:52","slug":"php-array_keys","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-array_keys\/","title":{"rendered":"PHP array_keys"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PHP <code>array_keys()<\/code> function to get the keys of an array.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP array_keys function<\/h2>\n\n\n\n<p>The PHP array_keys() function accepts an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array\/\">array<\/a> and returns all the keys or a subset of the keys of the array.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">array_keys ( <span class=\"hljs-keyword\">array<\/span> $array , mixed $search_value , bool $strict = <span class=\"hljs-keyword\">false<\/span> ) : <span class=\"hljs-keyword\">array<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$array<\/code> is the input array.<\/li><li><code>$search_value<\/code> specifies the value of the keys to search for.<\/li><li><code>$strict<\/code> if it sets to <code>true<\/code>, the <code>array_keys()<\/code> function uses the identical operator (===) for matching the search_value with the array keys. Otherwise, the function uses the equal opeartor (==) for matching. <\/li><\/ul>\n\n\n\n<p>The <code>array_keys()<\/code> function returns an array that contains all the keys in the input array.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP array_keys() function examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>array_keys()<\/code> function.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Using the array_keys() function example<\/h3>\n\n\n\n<p>The following example shows how to get all keys of an indexed array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$numbers = &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>];\n\n$keys = array_keys($numbers);\n\nprint_r($keys);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-number\">0<\/span>\n    &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">1<\/span>\n    &#91;<span class=\"hljs-number\">2<\/span>] =&gt; <span class=\"hljs-number\">2<\/span>\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, define an array that contains three numbers.<\/li><li>Second, use the <code>array_keys()<\/code> function to get all the keys of the <code>$numbers<\/code> array.<\/li><li>Third, display the keys.<\/li><\/ul>\n\n\n\n<p>Since the <code>$numbers<\/code> is an indexed array, the <code>array_keys()<\/code> function returns the numeric keys of the array.<\/p>\n\n\n\n<p>The following example uses the <code>array_keys()<\/code> function to get the keys of the array whole value is 20:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$numbers = &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>, <span class=\"hljs-number\">30<\/span>];\n\n$keys = array_keys($numbers, <span class=\"hljs-number\">20<\/span>);\n\nprint_r($keys);\n<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-number\">1<\/span>\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>array_keys()<\/code> function returns the key 1 because key 1 contains the value 20.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">2) Using PHP array_keys() function with an associative array example<\/h3>\n\n\n\n<p>The following example illustrates how to use the <code>array_keys()<\/code> function with an associative array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$user = &#91;\n\t<span class=\"hljs-string\">'username'<\/span> =&gt; <span class=\"hljs-string\">'admin'<\/span>,\n\t<span class=\"hljs-string\">'email'<\/span> =&gt; <span class=\"hljs-string\">'admin@CodeCamp'<\/span>,\n\t<span class=\"hljs-string\">'is_active'<\/span> =&gt; <span class=\"hljs-string\">'1'<\/span>\n];\n\n$properties = array_keys($user);\n\nprint_r($properties);\n<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; username\n    &#91;<span class=\"hljs-number\">1<\/span>] =&gt; email\n    &#91;<span class=\"hljs-number\">2<\/span>] =&gt; is_active\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, define an associative array <code>$user<\/code> that contains three keys <code>username<\/code>, <code>email<\/code>, and <code>is_active<\/code>.<\/li><li>Second, get the keys of <code>$user<\/code> array using the <code>array_keys()<\/code> function.<\/li><li>Third, show the returned keys.<\/li><\/ul>\n\n\n\n<p>The following example uses the <code>array_keys()<\/code> function to get the keys whose values equal 1:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$user = &#91;\n\t<span class=\"hljs-string\">'username'<\/span> =&gt; <span class=\"hljs-string\">'admin'<\/span>,\n\t<span class=\"hljs-string\">'email'<\/span> =&gt; <span class=\"hljs-string\">'admin@CodeCamp'<\/span>,\n\t<span class=\"hljs-string\">'is_active'<\/span> =&gt; <span class=\"hljs-string\">'1'<\/span>\n];\n\n$properties = array_keys($user, <span class=\"hljs-number\">1<\/span>);\n\nprint_r($properties);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; is_active\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>array_keys()<\/code> function returns one key, which is <code>is_active<\/code>. However, the <code>is_active<\/code> contains the string <code>'1'<\/code>, not the number <code>1<\/code>. This is because the <code>array_keys()<\/code> uses the equality (==) operator for comparison in searching by default.<\/p>\n\n\n\n<p>To enable the strict equality comparison (===) when searching, you pass <code>true<\/code> as the third argument of the <code>array_keys()<\/code> function like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$user = &#91;\n\t<span class=\"hljs-string\">'username'<\/span> =&gt; <span class=\"hljs-string\">'admin'<\/span>,\n\t<span class=\"hljs-string\">'email'<\/span> =&gt; <span class=\"hljs-string\">'admin@CodeCamp'<\/span>,\n\t<span class=\"hljs-string\">'is_active'<\/span> =&gt; <span class=\"hljs-string\">'1'<\/span>\n];\n\n$properties = array_keys($user, <span class=\"hljs-number\">1<\/span>, <span class=\"hljs-keyword\">true<\/span>);\n\nprint_r($properties);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">Array<\/span>\n(\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, the <code>array_keys()<\/code> function returns an empty array.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Finding array keys that pass a test<\/h2>\n\n\n\n<p>The following function returns the keys of an array, which pass a test specified a callback:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">array_keys_by<\/span><span class=\"hljs-params\">(array $array, callable $callback)<\/span>: <span class=\"hljs-title\">array<\/span>\n<\/span>{\n\t$keys = &#91;];\n\t<span class=\"hljs-keyword\">foreach<\/span> ($array <span class=\"hljs-keyword\">as<\/span> $key =&gt; $value) {\n\t\t<span class=\"hljs-keyword\">if<\/span> ($callback($key)) {\n\t\t\t$keys&#91;] = $key;\n\t\t}\n\t}\n\n\t<span class=\"hljs-keyword\">return<\/span> $keys;\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the array_keys_by() function above to find the keys that contain the string <code>'_post'<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$permissions = &#91;\n\t<span class=\"hljs-string\">'edit_post'<\/span> =&gt; <span class=\"hljs-number\">1<\/span>,\n\t<span class=\"hljs-string\">'delete_post'<\/span> =&gt; <span class=\"hljs-number\">2<\/span>,\n\t<span class=\"hljs-string\">'publish_post'<\/span> =&gt; <span class=\"hljs-number\">3<\/span>,\n\t<span class=\"hljs-string\">'approve'<\/span> =&gt; <span class=\"hljs-number\">4<\/span>,\n];\n\n$keys = array_keys_by($permissions, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-params\">($permission)<\/span> <\/span>{\n\t<span class=\"hljs-keyword\">return<\/span> strpos($permission, <span class=\"hljs-string\">'post'<\/span>);\n});\n\nprint_r($keys);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the PHP <code>array_keys()<\/code> function to get all the keys or a subset of keys in an array.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1079\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array_keys\/\"\n\t\t\t\tdata-post-title=\"PHP array_keys\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1079\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array_keys\/\"\n\t\t\t\tdata-post-title=\"PHP array_keys\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the PHP array_keys() function to get the keys of an array.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":50,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1079","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1079","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1079"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1079\/revisions"}],"predecessor-version":[{"id":2807,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1079\/revisions\/2807"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1079"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}