{"id":1952,"date":"2021-06-25T09:56:27","date_gmt":"2021-06-25T09:56:27","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1952"},"modified":"2021-06-25T09:56:56","modified_gmt":"2021-06-25T09:56:56","slug":"php-null-coalescing-operator","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-null-coalescing-operator\/","title":{"rendered":"PHP Null Coalescing Operator"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the PHP Null coalescing operator to assign a value to a variable if the variable doesn&#8217;t exist or null.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP null coalescing operator<\/h2>\n\n\n\n<p><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-form\/\">When working with forms<\/a>, you often need to check if a variable exists in the <code>$_GET<\/code> or <code>$_POST<\/code> by using the <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-ternary-operator\/\">ternary operator<\/a> in conjunction with the <code>isset()<\/code> construct. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$name = <span class=\"hljs-keyword\">isset<\/span>($_POST&#91;<span class=\"hljs-string\">'name'<\/span>]) ? $_POST&#91;<span class=\"hljs-string\">'name]: '<\/span><span class=\"hljs-string\">';<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This example assigns the <code>$_POST['name']<\/code> to the <code>$name<\/code> variable if <code>$_POST['name']<\/code> exists and not null. Otherwise, it assigns the <code>''<\/code> to the <code>$name<\/code> variable.<\/p>\n\n\n\n<p>To make it more convenient, PHP 7.0 added support for a null coalescing operator that is syntactic sugar of a ternary operator and <code>isset()<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$name = $_POST&#91;<span class=\"hljs-string\">'name'<\/span>] ?? <span class=\"hljs-string\">'John'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>??<\/code> is the null coalescing operator. It accepts two operands. If the first operand is null or doesn&#8217;t exist, the null coalescing operator returns the second operand. Otherwise, it returns the first one.<\/p>\n\n\n\n<p>In the above example, if the variable <code>name<\/code> doesn&#8217;t exist in the <code>$_POST<\/code> array or it is null, the <code>??<\/code> operator will assign the string <code>'John'<\/code> to the <code>$name<\/code> variable. See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\nvar_dump(<span class=\"hljs-keyword\">false<\/span> ?? <span class=\"hljs-string\">'default'<\/span>);   <span class=\"hljs-comment\">\/\/ false<\/span>\nvar_dump(<span class=\"hljs-keyword\">true<\/span> ?? <span class=\"hljs-string\">'default'<\/span>);   <span class=\"hljs-comment\">\/\/ true<\/span>\nvar_dump(<span class=\"hljs-string\">''<\/span> ?? <span class=\"hljs-string\">'default'<\/span>);   <span class=\"hljs-comment\">\/\/ \"\"<\/span>\nvar_dump(<span class=\"hljs-number\">0<\/span> ?? <span class=\"hljs-string\">'default'<\/span>);   <span class=\"hljs-comment\">\/\/ 0<\/span>\nvar_dump(&#91;] ?? <span class=\"hljs-string\">'default'<\/span>);   <span class=\"hljs-comment\">\/\/ array()<\/span>\nvar_dump(<span class=\"hljs-keyword\">null<\/span> ?? <span class=\"hljs-string\">'default'<\/span>);   <span class=\"hljs-comment\">\/\/ default<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>As you can see clearly from the output, the <code>??<\/code> operator is like a gate that doesn&#8217;t allow null to pass through.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Stacking the PHP Null coalescing operators<\/h2>\n\n\n\n<p>PHP allows you to stack the null coalescing operators. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$name = $fullname ?? $first ?? $last ?? <span class=\"hljs-string\">'John'<\/span>;\n<span class=\"hljs-keyword\">echo<\/span> $name; <span class=\"hljs-comment\">\/\/ 'John';<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, since the <code>$fullname<\/code>, <code>$first<\/code>, and <code>$last<\/code> doesn&#8217;t exist, the <code>$name<\/code> will take the <code>'John'<\/code> value.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP null coalescing assignment operator<\/h2>\n\n\n\n<p>The following example uses the null coalesing operator to assign the <code>0<\/code> to <code>$counter<\/code> if it is <code>null<\/code> or doesn&#8217;t exist:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$counter = $counter ?? <span class=\"hljs-number\">0<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The above statement repeats the variable <code>$counter<\/code> twice. To make it more concise, PHP 7.4 introduced the null coalescing assignment operator (<code>??=<\/code>):<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$counter ??= <span class=\"hljs-number\">0<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>??=<\/code> is the null coalescing assignment operator. It assigns the right operand to the left if the left operand is null. Otherwise, the coalescing assignment operator will do nothing.<\/p>\n\n\n\n<p>It&#8217;s equivalent to the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">if<\/span>(!<span class=\"hljs-keyword\">isset<\/span>($counter)) {\n    $counter = <span class=\"hljs-number\">0<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In practice, you&#8217;ll use the null coalescing assignment operator to assign a default value to a variable if it is null.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>The null coalescing operator (<code>??<\/code>) is a syntactic sugar of the ternary operator and <code>isset()<\/code>.<\/li><li>The null coalescing assignment operator assigns the right operand to the left one if the left operand is null.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1952\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-null-coalescing-operator\/\"\n\t\t\t\tdata-post-title=\"PHP Null Coalescing Operator\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1952\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-null-coalescing-operator\/\"\n\t\t\t\tdata-post-title=\"PHP Null Coalescing Operator\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about the PHP Null coalescing operator to assign a value to variable if the variable doesn&#8217;t exist or null.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":107,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1952","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1952","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1952"}],"version-history":[{"count":2,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1952\/revisions"}],"predecessor-version":[{"id":1954,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1952\/revisions\/1954"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1952"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}