{"id":2624,"date":"2021-09-11T08:30:10","date_gmt":"2021-09-11T08:30:10","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=2624"},"modified":"2021-09-11T08:37:14","modified_gmt":"2021-09-11T08:37:14","slug":"regex-sets-and-ranges","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/regex-sets-and-ranges\/","title":{"rendered":"Regex Sets and Ranges"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the regex sets and ranges to create <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-regular-expressions\/\">regular expressions<\/a> that match a set of characters.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Sets<\/h2>\n\n\n\n<p>A set is one or more characters specified in square brackets. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">&#91;abc]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since a set matches any characters in the square brackets, the <code>[abc]<\/code> set matches the character <code>a<\/code>, <code>b<\/code> and <code>c<\/code>.<\/p>\n\n\n\n<p>The following example uses a set to match the string <code>Jill<\/code> or <code>Hill<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$pattern = <span class=\"hljs-string\">'\/&#91;JH]ill\/'<\/span>;\n$title = <span class=\"hljs-string\">'Jack and Jill Went Up the Hill'<\/span>;\n\n<span class=\"hljs-keyword\">if<\/span> (preg_match_all($pattern, $title, $matches)) {\n    print_r($matches&#91;<span class=\"hljs-number\">0<\/span>]);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Jill\n    &#91;<span class=\"hljs-number\">1<\/span>] =&gt; Hill\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the set <code>[JH]<\/code> matches the character <code>J<\/code> or <code>H<\/code>. Therefore, the regular expression <code>\/[JH]ill\/<\/code> matches <code>Jill<\/code> and <code>Hill<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Ranges<\/h2>\n\n\n\n<p>Suppose you want to match many characters in a set, e.g., from <code>a<\/code> to <code>z<\/code>. If you list all of these characters in that square brackets, it would not be ideal.<\/p>\n\n\n\n<p>Ranges allow you to specify a range of characters. For example, the <code>[a-z]<\/code> ranges from <code>a<\/code> to <code>z<\/code>.<\/p>\n\n\n\n<p>Also, you can specify multiple ranges inside the square brackets. For example, the <code>[a-z0-9]<\/code> range matches characters from <code>a<\/code> to <code>z<\/code> and numbers from <code>0<\/code> to <code>9<\/code>.<\/p>\n\n\n\n<p>Similarly, the <code>[a-zA-Z0-9_]<\/code> is the same as the <code>\\w<\/code>  <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/regex-character-classes\/\">character class<\/a> and the <code>[0-9]<\/code> range is the same as the <code>\\d<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Negate sets and ranges<\/h2>\n\n\n\n<p>To negate a set or range, you use the caret character (<code>^<\/code>) at the beginning of the set and range. For example, the range <code>[^0-9]<\/code> matches any character except a digit. It is the same as <code>\\D<\/code>.<\/p>\n\n\n\n<p>Notice that the caret (<code>^<\/code>) is also an anchor that matches the beginning of a string. If you use the caret (<code>^<\/code>) inside the square brackets, it behaves like a negation operator, not an anchor.<\/p>\n\n\n\n<p>The following example uses the caret (^) to negate the set [aeoiu] to match the consonants in the string <code>'Hello'<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$pattern = <span class=\"hljs-string\">'\/&#91;^aeoiu]\/'<\/span>;\r\n$title = <span class=\"hljs-string\">'Hello'<\/span>;\r\n\r\n<span class=\"hljs-keyword\">if<\/span> (preg_match_all($pattern, $title, $matches)) {\r\n    print_r($matches&#91;<span class=\"hljs-number\">0<\/span>]);\r\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\r\n(\r\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; H\r\n    &#91;<span class=\"hljs-number\">1<\/span>] =&gt; l\r\n    &#91;<span class=\"hljs-number\">2<\/span>] =&gt; l\r\n)\r<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>A set matches any character specified in the square brackets.<\/li><li>A range matches any character in a range of characters.<\/li><li>To negate a set or range, you use the caret character <code>[^...]<\/code>.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2624\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/regex-sets-and-ranges\/\"\n\t\t\t\tdata-post-title=\"Regex Sets and Ranges\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2624\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/regex-sets-and-ranges\/\"\n\t\t\t\tdata-post-title=\"Regex Sets and Ranges\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about the regex sets and ranges to create regular expressions that match a set of characters.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":128,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-2624","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2624","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=2624"}],"version-history":[{"count":4,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2624\/revisions"}],"predecessor-version":[{"id":2629,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2624\/revisions\/2629"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=2624"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}