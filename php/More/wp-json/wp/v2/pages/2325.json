{"id":2325,"date":"2021-07-20T09:44:35","date_gmt":"2021-07-20T09:44:35","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=2325"},"modified":"2021-07-20T09:56:55","modified_gmt":"2021-07-20T09:56:55","slug":"php-property_exists","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-oop\/php-property_exists\/","title":{"rendered":"PHP property_exists"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the <code>property_exists()<\/code> function to check if the object or class has a property.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP property_exists function<\/h2>\n\n\n\n<p>The <code>property_exists()<\/code> function returns <code>true<\/code> if <a href=\"https:\/\/www.CodeCamp\/php-oop\/php-objects\/\">an object or a class<\/a> has a property. Otherwise, it returns <code>false<\/code>.<\/p>\n\n\n\n<p>Here&#8217;s the syntax of the <code>property_exists()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">property_exists(object|string $object_or_class, string $property): bool<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>property_exists()<\/code> method has two parameters:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>The <code>$object_or_class<\/code> specifies the object or class that needs to check for the existence of a property.<\/li><li>The <code>$property<\/code> specifies the name of the property to check.<\/li><\/ul>\n\n\n\n<p class=\"note\">Note that in case of an error, the <code>property_exists()<\/code> function returns <code>null<\/code> instead.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP property_exists function examples<\/h2>\n\n\n\n<p>The following example uses the <code>property_exists()<\/code> function to check if the <code>FileReader<\/code> class has a specific property:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">FileReader<\/span>\n<\/span>{\n    <span class=\"hljs-keyword\">private<\/span> $filename;\n\n    <span class=\"hljs-keyword\">public<\/span> $done;\n\n    <span class=\"hljs-keyword\">protected<\/span> $filesize;\n\n    <span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-keyword\">static<\/span> $mimeTypes;\n}\n\nvar_dump(property_exists(FileReader::class, <span class=\"hljs-string\">'filename'<\/span>)); <span class=\"hljs-comment\">\/\/ true<\/span>\nvar_dump(property_exists(FileReader::class, <span class=\"hljs-string\">'done'<\/span>)); <span class=\"hljs-comment\">\/\/ true<\/span>\nvar_dump(property_exists(FileReader::class, <span class=\"hljs-string\">'filesize'<\/span>)); <span class=\"hljs-comment\">\/\/ true<\/span>\nvar_dump(property_exists(FileReader::class, <span class=\"hljs-string\">'mimeTypes'<\/span>)); <span class=\"hljs-comment\">\/\/ true<\/span>\n\nvar_dump(property_exists(FileReader::class, <span class=\"hljs-string\">'status'<\/span>)); <span class=\"hljs-comment\">\/\/ false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">PHP property_exists function practical example<\/h2>\n\n\n\n<p>Suppose that you have a base class called <code>Model<\/code>. All the model classes need to <a href=\"https:\/\/www.CodeCamp\/php-oop\/php-inheritance\/\">extend<\/a> this <code>Model<\/code> class.<\/p>\n\n\n\n<p>To load a <code>Model<\/code> object from an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-associative-arrays\/\">associative array<\/a>, you can define a <code>load()<\/code> method in the <code>Model<\/code> class as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-keyword\">abstract<\/span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Model<\/span>\n<\/span>{\n    <span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">load<\/span><span class=\"hljs-params\">(array $data)<\/span>: <span class=\"hljs-title\">self<\/span>\n    <\/span>{\n        <span class=\"hljs-keyword\">foreach<\/span> ($data <span class=\"hljs-keyword\">as<\/span> $key =&gt; $value) {\n            <span class=\"hljs-keyword\">if<\/span> (property_exists(<span class=\"hljs-keyword\">$this<\/span>, $key)) {\n                <span class=\"hljs-keyword\">$this<\/span>-&gt;$key = $value;\n            }\n        }\n\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-keyword\">$this<\/span>;\n    }\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>load()<\/code> method accepts an associative array as an argument. It iterates over the array element. If the object has a property that matches a key in the array, the <code>load()<\/code> method assigns the value to the property.<\/p>\n\n\n\n<p>The following defines the <code>User<\/code> class that extends the <code>Model<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">User<\/span> <span class=\"hljs-keyword\">extends<\/span> <span class=\"hljs-title\">Model<\/span>\n<\/span>{\n    <span class=\"hljs-keyword\">private<\/span> $username;\n\n    <span class=\"hljs-keyword\">private<\/span> $email;\n\n    <span class=\"hljs-keyword\">private<\/span> $password;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To populate the properties of the <code>User<\/code> class with values of an array, you call the <code>load()<\/code> method like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$user = (<span class=\"hljs-keyword\">new<\/span> User())-&gt;load(&#91;\n    <span class=\"hljs-string\">'username'<\/span> =&gt; <span class=\"hljs-string\">'john'<\/span>,\n    <span class=\"hljs-string\">'email'<\/span> =&gt; <span class=\"hljs-string\">'john@CodeCamp'<\/span>,\n    <span class=\"hljs-string\">'password'<\/span> =&gt; password_hash(<span class=\"hljs-string\">'VerySecurePa$$1.'<\/span>, PASSWORD_DEFAULT),\n]);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In practice, you would have a registration form. After the form is submitted, you need to validate the data in the <code>$_POST<\/code> array. And then you call the load() method to initialize a <code>User<\/code> object.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the PHP <code>property_exists()<\/code> function to check if an object or a class has a specific property.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2325\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-oop\/php-property_exists\/\"\n\t\t\t\tdata-post-title=\"PHP property_exists\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2325\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-oop\/php-property_exists\/\"\n\t\t\t\tdata-post-title=\"PHP property_exists\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the property_exists() function to check if the object or class has a property.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1753,"menu_order":39,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-2325","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2325","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=2325"}],"version-history":[{"count":2,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2325\/revisions"}],"predecessor-version":[{"id":2327,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2325\/revisions\/2327"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1753"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=2325"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}