{"id":1156,"date":"2021-04-17T05:15:07","date_gmt":"2021-04-17T05:15:07","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1156"},"modified":"2021-09-04T10:52:05","modified_gmt":"2021-09-04T10:52:05","slug":"php-open-file","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-open-file\/","title":{"rendered":"PHP Open File"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to open a file in PHP using the <code>fopen()<\/code> function.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP fopen() function<\/h2>\n\n\n\n<p>Before reading from or writing to a file, you need to open it. To open a file, you use the <code>fopen()<\/code> function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">fopen ( string $filename , string $mode , bool $use_include_path = <span class=\"hljs-keyword\">false<\/span> , resource $context = ? ) : resource\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>fopen()<\/code> has the following parameters:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$filename<\/code> is the path to the file that you want to open.<\/li><li><code>$mode<\/code> specifies the type of access you require to the stream.  See the table below.<\/li><li><code>$use_include_path<\/code> determines whether the <code>fopen()<\/code> should also search for the file in the include path.<\/li><li><code>$context<\/code> specifies the <a href=\"https:\/\/www.php.net\/manual\/en\/stream.contexts.php\" target=\"_blank\" rel=\"noreferrer noopener\">stream context<\/a>.<\/li><\/ul>\n\n\n\n<p>The <code>fopen()<\/code> returns the file pointer resource if it opens the file successfully or <code>false<\/code> if it fails to open the file.<\/p>\n\n\n\n<p>The following table shows the type of access of the <code>$mode<\/code> parameter:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Mode<\/th><th>Reading<\/th><th>Writing<\/th><th>File Pointer<\/th><th>File doesn&#8217;t exist, Create?<\/th><th>If  the File Exists<\/th><\/tr><\/thead><tbody><tr><td>&#8216;r&#8217;<\/td><td>Yes<\/td><td>No<\/td><td>At the beginning of the file<\/td><td>No<\/td><td><\/td><\/tr><tr><td>&#8216;r+&#8217;<\/td><td>Yes<\/td><td>Yes<\/td><td>At the beginning of the file<\/td><td>No<\/td><td><\/td><\/tr><tr><td>&#8216;w&#8217;<\/td><td>No<\/td><td>Yes<\/td><td>At the beginning of the file<\/td><td>No<\/td><td><\/td><\/tr><tr><td>&#8216;w+&#8217;<\/td><td>Yes<\/td><td>Yes<\/td><td>At the beginning of the file<\/td><td>Yes<\/td><td><\/td><\/tr><tr><td>&#8216;a&#8217;<\/td><td>No<\/td><td>Yes<\/td><td>At the end of the file<\/td><td>Yes<\/td><td><\/td><\/tr><tr><td>&#8216;a+&#8217;<\/td><td>Yes<\/td><td>Yes<\/td><td>At the end of the file<\/td><td>Yes<\/td><td><\/td><\/tr><tr><td>&#8216;x&#8217;<\/td><td>No<\/td><td>Yes<\/td><td>At the beginning of the file<\/td><td>Yes<\/td><td>Return false<\/td><\/tr><tr><td>&#8216;x+&#8217;<\/td><td>Yes<\/td><td>Yes<\/td><td>At the beginning of the file<\/td><td>Yes<\/td><td>Return false<\/td><\/tr><tr><td>&#8216;c&#8217;<\/td><td>No<\/td><td>Yes<\/td><td>At the beginning of the file<\/td><td>Yes<\/td><td><\/td><\/tr><tr><td>&#8216;c+&#8217;<\/td><td>Yes<\/td><td>Yes<\/td><td>At the beginning of the file<\/td><td>Yes<\/td><td><\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>When working with a binary file, you need to append the characer&nbsp;<code>b<\/code>&nbsp;to the <code>$mode<\/code> argument. For example, the&nbsp;<code>'rb'<\/code> mode opens a binary file for reading.<\/p>\n\n\n\n<p>After opening a file and completing working with it, you should always close the file. If you don&#8217;t close a file properly, it may cause many issues. For example, you may not be able to access the file again.<\/p>\n\n\n\n<p>To close a file, you pass the file pointer to the <code>fclose()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">fclose ( resource $stream ) : bool<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>fclose()<\/code> function returns <code>true<\/code> on success or <code>false<\/code> on failure.<\/p>\n\n\n\n<p>It&#8217;s a good practice to check if a <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-file-exists\/\">file exists<\/a> before opening it.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP open files example<\/h2>\n\n\n\n<p>The following example uses the <code>fopen()<\/code> to open the <code>readme.txt<\/code> file for reading:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$filename = <span class=\"hljs-string\">'readme.txt'<\/span>;\r\n\r\n<span class=\"hljs-keyword\">if<\/span> (!file_exists($filename)) {\r\n    <span class=\"hljs-keyword\">die<\/span>(<span class=\"hljs-string\">\"The file $filename does not exist.\"<\/span>);\r\n}\r\n\r\n$f = fopen($filename, <span class=\"hljs-string\">'r'<\/span>);\r\n<span class=\"hljs-keyword\">if<\/span> ($f) {\r\n    <span class=\"hljs-comment\">\/\/ process the file<\/span>\r\n    <span class=\"hljs-comment\">\/\/ ...<\/span>\r\n    <span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">'The file '<\/span> . $filename . <span class=\"hljs-string\">' is open'<\/span>;\r\n    fclose($f);\r\n}\n<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, use the <code>file_exists()<\/code> function to check if the <code>readme.txt<\/code> file exists. If not, <a href=\"https:\/\/www.CodeCamp\/php-oop\/php-throw-exception\/\">throw an exception<\/a> saying that the file doesn&#8217;t exist.<\/li><li>Second, use the <code>fopen()<\/code> function to open the <code>readme.txt<\/code> for reading.<\/li><li>Third, close the file in the <code>finally<\/code> block only if the file pointer is not <code>null<\/code>.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the <code>fopen()<\/code> function to open a file for reading, writing, and appending.<\/li><li>Always use the <code>fclose()<\/code> function to close the file that was open by the <code>fopen()<\/code> function.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1156\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-open-file\/\"\n\t\t\t\tdata-post-title=\"PHP Open File\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1156\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-open-file\/\"\n\t\t\t\tdata-post-title=\"PHP Open File\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to open a file in PHP using the fopen() function.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":143,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1156","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1156","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1156"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1156\/revisions"}],"predecessor-version":[{"id":2538,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1156\/revisions\/2538"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1156"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}