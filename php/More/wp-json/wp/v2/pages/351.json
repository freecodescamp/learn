{"id":351,"date":"2021-03-15T00:15:14","date_gmt":"2021-03-15T00:15:14","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=351"},"modified":"2021-11-03T14:33:37","modified_gmt":"2021-11-03T14:33:37","slug":"php-int","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-int\/","title":{"rendered":"PHP int"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the PHP int type that represents integers in PHP.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP int type<\/h2>\n\n\n\n<p>Integers are whole numbers such as -3, -2, -1, 0, 1, 2, 3&#8230; PHP uses the <code>int<\/code> type to represent the integers. <\/p>\n\n\n\n<p>The range of integers depends on the platform where PHP runs. Typically, integers has a range from -2,147,438,648 to 2,147,483,647. It&#8217;s equivalent to 32 bits signed. <\/p>\n\n\n\n<p>To get the size of the integer, you use the <code>PHP_INT_SIZE<\/code> constant. Also, you use the <code>PHP_INT_MIN<\/code> and <code>PHP_INT_MAX<\/code> constants to get the minimum and maximum integer values.<\/p>\n\n\n\n<p>PHP represents integer literals in decimal, octal, binary, and hexadecimal formats.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Decimal numbers<\/h3>\n\n\n\n<p>PHP uses a sequence of digits without leading zeros to represent decimal values. The sequence may begin with a plus or minus sign. If it has no sign, then the integer is positive. For example:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">2000\n-100\n12345<\/code><\/span><\/pre>\n\n\n<p>From PHP 7.4, you can use the underscores (_) to group digits in an integer to make it easier to read. For example, instead of using the following number:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">1000000<\/code><\/span><\/pre>\n\n\n<p>you can use the underscores (_) to group digits like this:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">1_000_000<\/code><\/span><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Octal numbers<\/h3>\n\n\n\n<p>Octal numbers consist of a leading zero and a sequence of digits from 0 to 7. Like decimal numbers, the octal numbers can have a plus (+) or minus (-) sign. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">+<span class=\"hljs-number\">010<\/span> <span class=\"hljs-comment\">\/\/ decimal 8<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Hexadecimal numbers<\/h3>\n\n\n\n<p>Hexadecimal numbers consist of a leading <code>0x<\/code> and a sequence of digits (0-9) or letters (A-F). The letters can be lowercase or uppercase. By convention, letters are written in uppercase.<\/p>\n\n\n\n<p>Similar to decimal numbers, hexadecimal numbers can include a sign, either plus (+) or minus(-). For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\"><span class=\"hljs-number\">0x10<\/span> <span class=\"hljs-comment\">\/\/ decimal 16<\/span>\n<span class=\"hljs-number\">0xFF<\/span> <span class=\"hljs-comment\">\/\/ decimal 255<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Binary numbers<\/h3>\n\n\n\n<p>Binary numbers begin with <code>0b<\/code> are followed by a sequence of digits 0 and 1. The binary numbers can include a sign. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-number\">0b10<\/span> <span class=\"hljs-comment\">\/\/ decimal 2<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">The is_int() function<\/h2>\n\n\n\n<p>The <code>is_int()<\/code> built-in function returns <code>true<\/code> if a value (or a <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-variables\/\">variable<\/a>) is an integer. Otherwise, it returns <code>false<\/code>. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$amount = <span class=\"hljs-number\">100<\/span>;\n<span class=\"hljs-keyword\">echo<\/span> is_int($amount);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">1<\/code><\/span><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Integers are whole numbers such as -1, 0, 1, 2&#8230;<\/li><li>Use the <code>PHP_INT_SIZE<\/code> constant to get the size of the integer<\/li><li>Use the <code>PHP_INT_MIN<\/code> and <code>PHP_INT_MAX<\/code> constants to get the minimum and maximum integer values.<\/li><li>Literal integers can be in decimal, octal, hexadecimal, and binary forms.<\/li><li>Use the <code>is_int()<\/code> function returns true if a value (or variable) is an integer.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"351\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-int\/\"\n\t\t\t\tdata-post-title=\"PHP int\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"351\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-int\/\"\n\t\t\t\tdata-post-title=\"PHP int\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn about the PHP int type that represents integers in PHP. Introduction to the PHP int type Integers are whole numbers such as -3, -2, -1, 0, 1, 2, 3&#8230; PHP uses the int type to represent the integers. The range of integers depends on the platform where PHP runs. [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":10,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-351","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/351","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=351"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/351\/revisions"}],"predecessor-version":[{"id":2833,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/351\/revisions\/2833"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=351"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}