{"id":1167,"date":"2021-04-17T08:52:39","date_gmt":"2021-04-17T08:52:39","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1167"},"modified":"2021-09-04T11:09:28","modified_gmt":"2021-09-04T11:09:28","slug":"php-file_get_contents","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-file_get_contents\/","title":{"rendered":"PHP file_get_contents"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PHP <code>file_get_contents()<\/code> function to read the entire file into a string.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP file_get_contents() function<\/h2>\n\n\n\n<p>The <code>file_get_contents()<\/code> function reads the entire file into a string. Here&#8217;s the syntax of the <code>file_get_contents()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">file_get_contents ( \n    string $filename , \n    bool $use_include_path = <span class=\"hljs-keyword\">false<\/span> , \n    resource $context = ? , \n    int $offset = <span class=\"hljs-number\">0<\/span> , \n    int $maxlen = ? \n) : string|<span class=\"hljs-keyword\">false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>file_get_contents(<\/code>) function has the following parameters:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$filename<\/code> is the name of the file to read.<\/li><li><code>$use_include_path<\/code> if you set it to true, the function will also search for the file in the include path.<\/li><li><code>$context<\/code> specifies a valid context resource or null if don&#8217;t use a custom context.<\/li><li><code>$offset<\/code> is the offset where the function starts reading on the original stream. If it is negative, the offset counts from the end of the stream.<\/li><li><code>$maxlen<\/code> specifies the maximum length of data to read. By default, the function reads data till the end of the file.<\/li><\/ul>\n\n\n\n<p>The <code>file_get_contents()<\/code> returns the file contents on success or <code>false<\/code> on failure.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP file_get_contents() function examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>file_get_contents()<\/code> function.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Using the file_get_contents() function to download a webpage example<\/h3>\n\n\n\n<p>The following example shows how to use the <code>file_get_contents()<\/code> function to download an entire webpage into a string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$html = file_get_contents(<span class=\"hljs-string\">'https:\/\/www.php.net\/'<\/span>);\n<span class=\"hljs-keyword\">echo<\/span> $html;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Using the file_get_contents() function to read an entire file into a string example<\/h3>\n\n\n\n<p>The following example uses the <code>file_get_contents()<\/code> to read the data from the <code>readme.txt<\/code> into a string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$filename = <span class=\"hljs-string\">'readme1.txt'<\/span>;\n\n<span class=\"hljs-keyword\">if<\/span> (!is_readable($filename)) {\n    <span class=\"hljs-keyword\">die<\/span>(<span class=\"hljs-string\">'File does not exist or is not readable'<\/span>);\n}\n\n<span class=\"hljs-keyword\">echo<\/span> file_get_contents($filename);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, throw an exception if the <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-file-exists\/\">file exists<\/a> or readable using the <code>is_readable()<\/code> function.<\/li><li>Second, read the entire file into a string and show its contents.<\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\">3) Using the file_get_contents() function to read a part of a file into a string<\/h3>\n\n\n\n<p>The following example uses the <code>file_get_contents()<\/code> function to read 20 characters starting from the 5th character in the <code>readme.txt<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$filename = <span class=\"hljs-string\">'readme.txt'<\/span>;\n\n<span class=\"hljs-keyword\">if<\/span> (!is_readable($filename)) {\n    <span class=\"hljs-keyword\">die<\/span>(<span class=\"hljs-string\">'File does not exist or is not readable'<\/span>);\n}\n\n<span class=\"hljs-keyword\">echo<\/span> file_get_contents($filename, <span class=\"hljs-keyword\">null<\/span>, <span class=\"hljs-keyword\">null<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">20<\/span>);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In PHP 8, you can use the name arguments when calling the <code>file_get_contents()<\/code> function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$content = file_get_contents(\n\t$filename = $filename,\n\t$offset = <span class=\"hljs-number\">5<\/span>,\n\t$maxlen = <span class=\"hljs-number\">20<\/span>\n);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the PHP <code>file_get_contents()<\/code> function to read a file into a string.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1167\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-file_get_contents\/\"\n\t\t\t\tdata-post-title=\"PHP file_get_contents\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1167\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-file_get_contents\/\"\n\t\t\t\tdata-post-title=\"PHP file_get_contents\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn how to use the PHP file_get_contents() function to read the entire file into a string. Introduction to the PHP file_get_contents() function The file_get_contents() function reads the entire file into a string. Here&#8217;s the syntax of the file_get_contents() function: The file_get_contents() function has the following parameters: $filename is the [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":146,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1167","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1167","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1167"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1167\/revisions"}],"predecessor-version":[{"id":2546,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1167\/revisions\/2546"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1167"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}