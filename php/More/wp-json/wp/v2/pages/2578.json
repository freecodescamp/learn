{"id":2578,"date":"2021-09-06T03:02:03","date_gmt":"2021-09-06T03:02:03","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=2578"},"modified":"2021-09-06T03:02:05","modified_gmt":"2021-09-06T03:02:05","slug":"php-is_null","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-is_null\/","title":{"rendered":"PHP is_null"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PHP <code>is_null()<\/code> construct to check if a variable is <code>null<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP is_null() construct<\/h2>\n\n\n\n<p>PHP <code>is_null()<\/code> accepts a <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-variables\/\">variable<\/a> and returns <code>true<\/code> if that variable is <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-null\/\">null<\/a><\/code>. Otherwise, it returns <code>false<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">is_null(mixed $v): bool<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>$v<\/code> is the variable to check. If <code>$v<\/code> doesn&#8217;t exist, the <code>is_null()<\/code> also returns <code>true<\/code> and issues a notice.<\/p>\n\n\n\n<p>Since the <code>is_null()<\/code> is a language construct, not a <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-functions\/\">function<\/a>, you cannot call it via <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-variable-functions\/\">variable functions<\/a>. For example, the following statement will result in an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$f = is_null;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, you can define a function that wraps the <code>is_null()<\/code> construct like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">isnull<\/span><span class=\"hljs-params\">($v)<\/span>: <span class=\"hljs-title\">bool<\/span>\n<\/span>{\n    <span class=\"hljs-keyword\">return<\/span> is_null($v);\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Alternatively, you can define an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-arrow-functions\/\">arrow function<\/a>, assign it to a variable, and use that variable function.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$isnull = fn($v) =&gt; is_null($v);\n\n$color = <span class=\"hljs-keyword\">null<\/span>;\n<span class=\"hljs-keyword\">echo<\/span> $isnull($color); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">PHP is_null() examples<\/h2>\n\n\n\n<p>The following example uses the <code>is_null()<\/code> construct and returns <code>true<\/code> because the <code>$count<\/code> variable doesn&#8217;t exist:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\nvar_dump(is_null($count));<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This code also issues a notice:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">Notice: Undefined variable: $count<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>is_null()<\/code> and returns <code>true<\/code> because the <code>$count<\/code> variable is <code>null<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$count = <span class=\"hljs-keyword\">null<\/span>;\nvar_dump(is_null($count)); <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>is_null()<\/code> and returns false because the <code>$count<\/code> variable is not <code>null<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$count = <span class=\"hljs-number\">1<\/span>;\nvar_dump(is_null($count)); <span class=\"hljs-comment\">\/\/ false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">PHP is_null() with array<\/h2>\n\n\n\n<p>The following example uses the <code>is_null()<\/code> to check if the element with the key <code>link<\/code> is <code>null<\/code> or not. It returns <code>true<\/code> because the element doesn&#8217;t exist:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$colors = &#91;\n    <span class=\"hljs-string\">'text'<\/span> =&gt; <span class=\"hljs-string\">'black'<\/span>,\n    <span class=\"hljs-string\">'background'<\/span> =&gt; <span class=\"hljs-string\">'white'<\/span>\n];\n\nvar_dump(is_null($colors&#91;<span class=\"hljs-string\">'link'<\/span>]));<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It also returns a notice:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">Notice: Undefined index: link<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">PHP is_null() with string index<\/h2>\n\n\n\n<p>The following example uses the <code>is_null()<\/code> to check if the element at index 5 in the string <code>$message<\/code> is null or not:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$message = <span class=\"hljs-string\">'Hello'<\/span>;\n\nvar_dump(is_null($message&#91;<span class=\"hljs-number\">5<\/span>]));<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It returns false and issues a notice:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">PHP Notice:  Uninitialized string offset: <span class=\"hljs-number\">5<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">PHP is_null(), equal opeartor (==), and identity operator (===)<\/h2>\n\n\n\n<p>The echo displays an empty string for the false value, which is not intuitive. The following defines a function that displays false as the string false instead of an empty string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">echo_bool<\/span><span class=\"hljs-params\">(string $title, bool $v)<\/span>: <span class=\"hljs-title\">void<\/span>\n<\/span>{\n    <span class=\"hljs-keyword\">echo<\/span> $title, <span class=\"hljs-string\">\"\\t\"<\/span>, $v === <span class=\"hljs-keyword\">true<\/span> ? <span class=\"hljs-string\">'true'<\/span> : <span class=\"hljs-string\">'false'<\/span>, PHP_EOL;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Comparing falsy values with null using equal operator (==)<\/h3>\n\n\n\n<p>Comparing a falsy value with <code>null<\/code> using the equal operator (<code>==<\/code>) will return <code>true<\/code>. For example:<\/p>\n\n\n\n<p>The following example compares <code>null<\/code> with falsy values using the equal operator (<code>==<\/code>):<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">echo_bool<\/span><span class=\"hljs-params\">(string $title, bool $v)<\/span>: <span class=\"hljs-title\">void<\/span>\n<\/span>{\n    <span class=\"hljs-keyword\">echo<\/span> $title, <span class=\"hljs-string\">\"\\t\"<\/span>, $v === <span class=\"hljs-keyword\">true<\/span> ? <span class=\"hljs-string\">'true'<\/span> : <span class=\"hljs-string\">'false'<\/span>, PHP_EOL;\n}\n\necho_bool(<span class=\"hljs-string\">'null == false:'<\/span>, <span class=\"hljs-keyword\">null<\/span> == <span class=\"hljs-keyword\">false<\/span>);\necho_bool(<span class=\"hljs-string\">'null == 0:'<\/span>, <span class=\"hljs-keyword\">null<\/span> == <span class=\"hljs-number\">0<\/span>);\necho_bool(<span class=\"hljs-string\">'null == 0.0:'<\/span>, <span class=\"hljs-keyword\">null<\/span> == <span class=\"hljs-number\">0.0<\/span>);\necho_bool(<span class=\"hljs-string\">'null ==\"0\":'<\/span>, <span class=\"hljs-keyword\">null<\/span> == <span class=\"hljs-keyword\">false<\/span>);\necho_bool(<span class=\"hljs-string\">'null == \"\":'<\/span>, <span class=\"hljs-keyword\">null<\/span> == <span class=\"hljs-string\">''<\/span>);\necho_bool(<span class=\"hljs-string\">'null == &#91;]:'<\/span>, <span class=\"hljs-keyword\">null<\/span> == &#91;]);\necho_bool(<span class=\"hljs-string\">'null == null:'<\/span>, <span class=\"hljs-keyword\">null<\/span> == <span class=\"hljs-keyword\">null<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">null == false:  true\nnull == 0:      true\nnull == 0.0:    true\nnull ==\"0\":     true\nnull == \"\":     true\nnull == &#91;]:     true\nnull == null:   true<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Comparing falsy value with null using identity operator (===)<\/h3>\n\n\n\n<p>The following example uses the identity operator <code>(===<\/code>) to compare null with falsy values, only <code>null === null<\/code> returns <code>true<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">&lt;?php\n\nfunction echo_bool(string $title, bool $v): void\n{\n    echo $title, \"\\t\", $v === true ? 'true' : 'false', PHP_EOL;\n}\n\necho_bool('null === false:', null === false);\necho_bool('null === 0:', null === 0);\necho_bool('null === 0.0:', null === 0.0);\necho_bool('null ===\"0\":', null === false);\necho_bool('null === \"\":', null === '');\necho_bool('null === &#91;]:', null === &#91;]);\necho_bool('null === null:', null === null);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">null<\/span> === <span class=\"hljs-keyword\">false<\/span>: <span class=\"hljs-keyword\">false<\/span>\n<span class=\"hljs-keyword\">null<\/span> === <span class=\"hljs-number\">0<\/span>:     <span class=\"hljs-keyword\">false<\/span>\n<span class=\"hljs-keyword\">null<\/span> === <span class=\"hljs-number\">0.0<\/span>:   <span class=\"hljs-keyword\">false<\/span>\n<span class=\"hljs-keyword\">null<\/span> ===<span class=\"hljs-string\">\"0\"<\/span>:    <span class=\"hljs-keyword\">false<\/span>\n<span class=\"hljs-keyword\">null<\/span> === <span class=\"hljs-string\">\"\"<\/span>:    <span class=\"hljs-keyword\">false<\/span>\n<span class=\"hljs-keyword\">null<\/span> === &#91;]:    <span class=\"hljs-keyword\">false<\/span>\n<span class=\"hljs-keyword\">null<\/span> === <span class=\"hljs-keyword\">null<\/span>:  <span class=\"hljs-keyword\">true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Comparing falsy values with null using the PHP is_null()<\/h3>\n\n\n\n<p>The following example uses the <code>is_null()<\/code> to check if falsy values are <code>null<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">echo_bool<\/span><span class=\"hljs-params\">(string $title, bool $v)<\/span>: <span class=\"hljs-title\">void<\/span>\n<\/span>{\n    <span class=\"hljs-keyword\">echo<\/span> $title, <span class=\"hljs-string\">\"\\t\"<\/span>, $v === <span class=\"hljs-keyword\">true<\/span> ? <span class=\"hljs-string\">'true'<\/span> : <span class=\"hljs-string\">'false'<\/span>, PHP_EOL;\n}\n\necho_bool(<span class=\"hljs-string\">'is_null(false):'<\/span>, is_null(<span class=\"hljs-keyword\">false<\/span>));\necho_bool(<span class=\"hljs-string\">'is_null(0):'<\/span>, is_null(<span class=\"hljs-number\">0<\/span>));\necho_bool(<span class=\"hljs-string\">'is_null(0.0)'<\/span>, is_null(<span class=\"hljs-number\">0.0<\/span>));\necho_bool(<span class=\"hljs-string\">'is_null(\"0\"):'<\/span>, is_null(<span class=\"hljs-string\">\"0\"<\/span>));\necho_bool(<span class=\"hljs-string\">'is_null(\"\"):'<\/span>, is_null(<span class=\"hljs-string\">\"\"<\/span>));\necho_bool(<span class=\"hljs-string\">'is_null(&#91;]):'<\/span>, is_null(&#91;]));\necho_bool(<span class=\"hljs-string\">'is_null(null):'<\/span>, is_null(<span class=\"hljs-keyword\">null<\/span>));<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">is_null(<span class=\"hljs-keyword\">false<\/span>): <span class=\"hljs-keyword\">false<\/span>\nis_null(<span class=\"hljs-number\">0<\/span>):     <span class=\"hljs-keyword\">false<\/span>\nis_null(<span class=\"hljs-number\">0.0<\/span>)    <span class=\"hljs-keyword\">false<\/span>\nis_null(<span class=\"hljs-string\">\"0\"<\/span>):   <span class=\"hljs-keyword\">false<\/span>\nis_null(<span class=\"hljs-string\">\"\"<\/span>):    <span class=\"hljs-keyword\">false<\/span>\nis_null(&#91;]):    <span class=\"hljs-keyword\">false<\/span>\nis_null(<span class=\"hljs-keyword\">null<\/span>):  <span class=\"hljs-keyword\">true<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>is_null()<\/code> and identity operator (<code>===<\/code>) return the same result.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>The <code>is_null()<\/code> checks a value and returns <code>true<\/code> if that value is <code>null<\/code>. Otherwise, it returns <code>false<\/code>.<\/li><li>The <code>is_null()<\/code> behaves the same as the identity operator (<code>===<\/code>).<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2578\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-is_null\/\"\n\t\t\t\tdata-post-title=\"PHP is_null\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2578\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-is_null\/\"\n\t\t\t\tdata-post-title=\"PHP is_null\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the PHP is_null() construct to check if a variable is null.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":66,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-2578","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2578","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=2578"}],"version-history":[{"count":1,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2578\/revisions"}],"predecessor-version":[{"id":2579,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2578\/revisions\/2579"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=2578"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}