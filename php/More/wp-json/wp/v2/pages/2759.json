{"id":2759,"date":"2021-09-27T08:14:12","date_gmt":"2021-09-27T08:14:12","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=2759"},"modified":"2021-09-27T08:48:18","modified_gmt":"2021-09-27T08:48:18","slug":"php-password_hash","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-password_hash\/","title":{"rendered":"PHP password_hash"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PHP <code>password_hash()<\/code> function to create a password hash.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP password_hash() function<\/h2>\n\n\n\n<p>The password_hash() function allows you to create a password hash using a secure one-way hashing algorithm.<\/p>\n\n\n\n<p>Here&#8217;s the syntax of the <code>password_hash()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">password_hash(string $password, string|int|<span class=\"hljs-keyword\">null<\/span> $algo, <span class=\"hljs-keyword\">array<\/span> $options = &#91;]): string<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>password_hash()<\/code> function has the following parameters:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$password<\/code> is the plain text password to be hashed.<\/li><li><code>$algo<\/code> is a constant that specifies the hashing algorithm.<\/li><li><code>$options<\/code> is an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-associative-arrays\/\">associative array<\/a> of options of each algorithm. If you omit the <code>$options<\/code>, the function will generate a random salt and default cost for hashing.<\/li><\/ul>\n\n\n\n<p>The <code>password_hash()<\/code> function returns the hashed password.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">hashing algorithms<\/h3>\n\n\n\n<p>The <code>password_hash()<\/code> function supports the following hashing algorithms:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Constant<\/th><th>Hashing Algorithm<\/th><\/tr><\/thead><tbody><tr><td><code>PASSWORD_DEFAULT<\/code><\/td><td>bcrypt<\/td><\/tr><tr><td><code>PASSWORD_BCRYPT<\/code><\/td><td><code>CRYPT_BLOWFISH<\/code>&nbsp;<\/td><\/tr><tr><td><code>PASSWORD_ARGON2I<\/code><\/td><td>Argon2i<\/td><\/tr><tr><td><code>PASSWORD_ARGON2ID<\/code><\/td><td>Argon2id<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">PHP password_hash() function example<\/h2>\n\n\n\n<p>The following example shows how to generate the hashed password from the password <code>'Password1'<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$password = <span class=\"hljs-string\">'Password1'<\/span>;\n<span class=\"hljs-keyword\">echo<\/span>  password_hash($password, PASSWORD_DEFAULT);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">$2y$10$hnQY9vdyZUcwzg2CO7ykf.a4iI5ij4Pi5ZwySwplFJM7AKUNUVssO<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This example uses the <code>PASSWORD_DEFAULT<\/code> algorithm, which instructs the <code>password_hash()<\/code> function to use the bcrypt hashing algorithm.<\/p>\n\n\n\n<p>In practice, you&#8217;ll use the <code>password_hash()<\/code> function to hash a password before storing it in the database. And, you&#8217;ll use the <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-password_verify\/\">password_verify()<\/a><\/code> function to match the plain text password provided by users with the hashed password stored in the database.<\/p>\n\n\n\n<p>Besides hashing a plain text password, you can use the <code>password_hash()<\/code> to securely hash any token you want to store in the database.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the PHP <code>password_hash()<\/code> function to create a hash password using a secure one-way hashing algorithm.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2759\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-password_hash\/\"\n\t\t\t\tdata-post-title=\"PHP password_hash\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2759\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-password_hash\/\"\n\t\t\t\tdata-post-title=\"PHP password_hash\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the PHP password_hash() function to create a password hash.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":101,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-2759","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2759","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=2759"}],"version-history":[{"count":4,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2759\/revisions"}],"predecessor-version":[{"id":2766,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2759\/revisions\/2766"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=2759"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}