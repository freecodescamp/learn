{"id":436,"date":"2021-03-15T09:53:04","date_gmt":"2021-03-15T09:53:04","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=436"},"modified":"2021-06-25T10:46:50","modified_gmt":"2021-06-25T10:46:50","slug":"php-comparison-operators","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-comparison-operators\/","title":{"rendered":"PHP Comparison Operators"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use PHP comparison operators to compare two values.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to PHP comparison operators<\/h2>\n\n\n\n<p>A comparison operator allows you to compare two values and returns <code>true<\/code> if the comparison is truthful and <code>false<\/code> otherwise. <\/p>\n\n\n\n<p>The following table illustrates the comparison operators in PHP:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Operator<\/th><th>Name<\/th><th>Description<\/th><\/tr><\/thead><tbody><tr><td>==<\/td><td>Equal to<\/td><td>Return&nbsp;<code>true<\/code> if both operands are equal; otherwise, it returns&nbsp;<code>false<\/code>.<\/td><\/tr><tr><td>!=, &lt;&gt;<\/td><td>Not equal to<\/td><td>Return <code>true<\/code> if both operands are equal; otherwise, it returns <code>false<\/code>.<\/td><\/tr><tr><td>===<\/td><td>Identical to<\/td><td>Return&nbsp;<code>true<\/code> if both operands have the same data type and equal; otherwise, it returns&nbsp;<code>false<\/code>.<\/td><\/tr><tr><td>!==<\/td><td>Not identical to<\/td><td>Return&nbsp;<code>true<\/code> if both operands are not equal or not have the same data type; otherwise, it returns <code>false<\/code>.<\/td><\/tr><tr><td>&gt;<\/td><td>Greater than<\/td><td>Return&nbsp;<code>true<\/code> if the operand on the left&nbsp; is greater than the operand on the right; otherwise, it returns&nbsp;<code>false<\/code>.<\/td><\/tr><tr><td>&gt;=<\/td><td>Greater than or equal to<\/td><td>Return&nbsp;<code>true<\/code> if the operand on the left&nbsp; is greater than or equal to the operand on the right; otherwise, it returns&nbsp;<code>false<\/code>.<\/td><\/tr><tr><td>&lt;<\/td><td>Less than<\/td><td>Return&nbsp;<code>true<\/code> if the operand on the left&nbsp;is less than the operand on the right; otherwise, it returns&nbsp;<code>false<\/code>.<\/td><\/tr><tr><td>&lt;=<\/td><td>Less than or equal to<\/td><td>Return&nbsp;<code>true<\/code> if the operand on the left&nbsp; is less than or equal to the operand on the right; otherwise, it returns&nbsp;<code>false<\/code>.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h3 class=\"wp-block-heading\">Equality Operator (==)<\/h3>\n\n\n\n<p>The equality returns <code>true<\/code> if both values are equal; otherwise, it returns <code>false<\/code>. The following example returns true because 10 is equal 10:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-number\">10<\/span>;\n$y = <span class=\"hljs-number\">10<\/span>;\nvar_dump($x == $y); <span class=\"hljs-comment\">\/\/ bool(true)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example returns <code>false<\/code> because <code>10<\/code> is not equal <code>20<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\">\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-number\">20<\/span>;\n$y = <span class=\"hljs-number\">10<\/span>;\nvar_dump($x == $y); <span class=\"hljs-comment\">\/\/ bool(false)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example compares the number <code>20<\/code> with a string <code>'20'<\/code>, it also returns <code>true<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-string\">'20'<\/span>;\n$y = <span class=\"hljs-number\">20<\/span>;\nvar_dump($x == $y); <span class=\"hljs-comment\">\/\/ bool(true)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you want to compare two values with the consideration of type, you can use the identical operator (<code>===<\/code>).<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Not equal to operator (!=, &lt;&gt;)<\/h3>\n\n\n\n<p>The not equal to (!=, &lt;&gt;) operator returns <code>true<\/code> if the lefthand value is not equal to the righthand value; otherwise, it returns <code>false<\/code>. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-number\">20<\/span>;\n$y = <span class=\"hljs-number\">10<\/span>;\n\nvar_dump($x != $y); <span class=\"hljs-comment\">\/\/ bool(true)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Identical operator (===)<\/h3>\n\n\n\n<p>The identical operator returns <code>true<\/code> if both values are equal and have the same type; otherwise returns <code>false<\/code>. <\/p>\n\n\n\n<p>The following example uses the identical operator to compare a string and a number. It returns false because these values have different types:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-string\">'20'<\/span>;\n$y = <span class=\"hljs-number\">20<\/span>;\nvar_dump($x === $y); <span class=\"hljs-comment\">\/\/ bool(false)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Not identical operator (!==)<\/h3>\n\n\n\n<p>The not identical operator (!==) returns <code>true<\/code> if the values are not equal or they do not have the same type; otherwise, it return <code>false<\/code>. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-number\">20<\/span>;\n$y = <span class=\"hljs-number\">10<\/span>;\n\nvar_dump($x != $y); <span class=\"hljs-comment\">\/\/ bool(true)<\/span>\n\n$x = <span class=\"hljs-number\">20<\/span>;\n$y = <span class=\"hljs-string\">'20'<\/span>;\nvar_dump($x != $y); <span class=\"hljs-comment\">\/\/ bool(false)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\" id=\"block-9bdc92b5-32aa-40f8-ac8d-0abc1dce3d17\">Greater than (&gt;)<\/h3>\n\n\n\n<p>The greater than return <code>true<\/code> if the lefthand value is greater than the righthand value; otherwise, it returns <code>false<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-number\">10<\/span>;\n$y = <span class=\"hljs-number\">20<\/span>;\n\nvar_dump($x &gt; $y); <span class=\"hljs-comment\">\/\/ bool(false)<\/span>\nvar_dump($y &gt; $x); <span class=\"hljs-comment\">\/\/ bool(true)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Greater than or equal to (&gt;=)<\/h3>\n\n\n\n<p>The greater than or equal to operator returns true if the lefthand value is greater than or equal to the righthand value; otherwise, it returns false. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-number\">20<\/span>;\n$y = <span class=\"hljs-number\">20<\/span>;\n\nvar_dump($x &gt;= $y); <span class=\"hljs-comment\">\/\/ bool(true)<\/span>\nvar_dump($y &gt;= $x); <span class=\"hljs-comment\">\/\/ bool(true)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Less than (&lt;)<\/h3>\n\n\n\n<p>The less than operator returns true if the lefthand value is less than the righthand value; otherwise, it returns false. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-number\">20<\/span>;\n$y = <span class=\"hljs-number\">10<\/span>;\n\nvar_dump($x &lt; $y); <span class=\"hljs-comment\">\/\/ bool(false)<\/span>\nvar_dump($y &lt; $x); <span class=\"hljs-comment\">\/\/ bool(true)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Less than or equal to (&lt;=)<\/h3>\n\n\n\n<p>If the lefthand value is less than or equal to the righthand value, the less than or equal to operator returns true; otherwise, it returns false. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$x = <span class=\"hljs-number\">20<\/span>;\n$y = <span class=\"hljs-number\">20<\/span>;\n\nvar_dump($x &lt;= $y); <span class=\"hljs-comment\">\/\/ bool(true)<\/span>\nvar_dump($y &lt;= $x); <span class=\"hljs-comment\">\/\/ bool(true)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned how to use the PHP comparison operators to compare two values of the same or different types.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"436\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-comparison-operators\/\"\n\t\t\t\tdata-post-title=\"PHP Comparison Operators\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"436\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-comparison-operators\/\"\n\t\t\t\tdata-post-title=\"PHP Comparison Operators\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use PHP comparison operators to compare two values.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":19,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-436","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/436","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=436"}],"version-history":[{"count":3,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/436\/revisions"}],"predecessor-version":[{"id":1971,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/436\/revisions\/1971"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=436"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}