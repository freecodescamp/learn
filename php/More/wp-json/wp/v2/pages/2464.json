{"id":2464,"date":"2021-08-29T08:19:21","date_gmt":"2021-08-29T08:19:21","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=2464"},"modified":"2023-07-03T13:13:20","modified_gmt":"2023-07-03T13:13:20","slug":"php-list","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-list\/","title":{"rendered":"PHP list"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PHP list syntax to assign multiple variables in one operation.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP list syntax<\/h2>\n\n\n\n<p>Suppose you have an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array\/\">array<\/a> that contains two numbers:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$prices  = &#91;<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">0.1<\/span>];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To assign each element of the <code>$prices<\/code> array to <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-variables\/\">variables<\/a>, you&#8217;ll do it like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$pices = &#91;<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">0.1<\/span>];\n$buy_price = $prices&#91;<span class=\"hljs-number\">0<\/span>];\n$tax = $price&#91;<span class=\"hljs-number\">1<\/span>];<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The code assigns the first element and second element of the array <code>$prices<\/code> to <code>$buy_price<\/code> and <code>$tax<\/code> variables respectively. But you need two assignments to assign two two array elements to two variables.<\/p>\n\n\n\n<p>PHP provides the <code>list()<\/code> construct that assigns the elements of an array to a list of variables in one assignment:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">list<\/span>(var1, var2, ...) = $array;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$prices  = &#91;<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">0.1<\/span>];\n<span class=\"hljs-keyword\">list<\/span>($buy_price, $tax) = $prices;\n\nvar_dump( $buy_price, $tax );<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">int<\/span>(100)  \n<span class=\"hljs-selector-tag\">float<\/span>(0<span class=\"hljs-selector-class\">.1<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the list assigns the first element of the $prices array to the $buy_price variable and the second element of the <code>$price<\/code> array to the <code>$tax<\/code> variable.<\/p>\n\n\n\n<p>Note that like <code>array()<\/code>, <code>list()<\/code> is not a <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-functions\/\">function<\/a> but a language construct.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP list examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the list construct.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Using a list to skip array elements<\/h3>\n\n\n\n<p>The following example uses the list to assign the first and the third element to variables. It skips the second element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$prices = &#91;<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">0.1<\/span>, <span class=\"hljs-number\">0.05<\/span>];\n\n<span class=\"hljs-keyword\">list<\/span>($buy_price, , $discount) = $prices;\n<span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">\"The price is $buy_price with the discount of $discount\"<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">The price is <span class=\"hljs-number\">100<\/span> <span class=\"hljs-keyword\">with<\/span> the discount <span class=\"hljs-keyword\">of<\/span> <span class=\"hljs-number\">0.05<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Using the nested list to assign variables<\/h3>\n\n\n\n<p>The following example uses the nested list to assign the array&#8217;s elements to the variables:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$elements = &#91;<span class=\"hljs-string\">'body'<\/span>, &#91;<span class=\"hljs-string\">'white'<\/span>,<span class=\"hljs-string\">'blue'<\/span>]];\n<span class=\"hljs-keyword\">list<\/span>($element, <span class=\"hljs-keyword\">list<\/span>($bgcolor, $color)) = $elements;\n\nvar_dump($element, $bgcolor, $color);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">string(<span class=\"hljs-number\">4<\/span>) <span class=\"hljs-string\">\"body\"<\/span> \nstring(<span class=\"hljs-number\">5<\/span>) <span class=\"hljs-string\">\"white\"<\/span>\nstring(<span class=\"hljs-number\">4<\/span>) <span class=\"hljs-string\">\"blue\"<\/span> <\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">3) Using a PHP list with an associative array<\/h3>\n\n\n\n<p>Starting from PHP 7.1.0, you can use the list construct to assign elements of an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-associative-arrays\/\">associative array<\/a> to variables. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$person = &#91;\n    <span class=\"hljs-string\">'first_name'<\/span> =&gt; <span class=\"hljs-string\">'John'<\/span>,\n    <span class=\"hljs-string\">'last_name'<\/span> =&gt; <span class=\"hljs-string\">'Doe'<\/span>,\n    <span class=\"hljs-string\">'age'<\/span> =&gt; <span class=\"hljs-number\">25<\/span>\n];\n\n<span class=\"hljs-keyword\">list<\/span>(\n    <span class=\"hljs-string\">'first_name'<\/span> =&gt; $first_name,\n    <span class=\"hljs-string\">'last_name'<\/span> =&gt; $last_name,\n    <span class=\"hljs-string\">'age'<\/span> =&gt; $age) = $person;\n\nvar_dump($first_name, $last_name, $age);\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">string(<span class=\"hljs-number\">4<\/span>) <span class=\"hljs-string\">\"John\"<\/span> \nstring(<span class=\"hljs-number\">3<\/span>) <span class=\"hljs-string\">\"Doe\"<\/span> \nint(<span class=\"hljs-number\">25<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\">\n<li>Use PHP <code>list()<\/code> construct to assign multiple variables in one operation.<\/li>\n<\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2464\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-list\/\"\n\t\t\t\tdata-post-title=\"PHP list\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2464\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-list\/\"\n\t\t\t\tdata-post-title=\"PHP list\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the PHP list syntax to assign multiple variables in one operation<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":56,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-2464","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2464","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=2464"}],"version-history":[{"count":3,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2464\/revisions"}],"predecessor-version":[{"id":2910,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2464\/revisions\/2910"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=2464"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}