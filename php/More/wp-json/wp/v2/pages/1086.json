{"id":1086,"date":"2021-04-13T02:18:25","date_gmt":"2021-04-13T02:18:25","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1086"},"modified":"2021-04-13T02:18:27","modified_gmt":"2021-04-13T02:18:27","slug":"php-in_array","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-in_array\/","title":{"rendered":"PHP in_array"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PHP <code>in_array()<\/code> function to check if a value exists in an array.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP in_array() function<\/h2>\n\n\n\n<p>The <code>in_array()<\/code> function returns <code>true<\/code> if a value exists in an array. Here&#8217;s the syntax of the <code>in_array()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">in_array ( mixed $needle , <span class=\"hljs-keyword\">array<\/span> $haystack , bool $strict = <span class=\"hljs-keyword\">false<\/span> ) : bool<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$needle<\/code> is the searched value.<\/li><li><code>$haystack<\/code> is the array to search.<\/li><li><code>$strict<\/code> if the <code>$strict<\/code> sets to <code>true<\/code>, the <code>in_array()<\/code> function will use the <code>strict<\/code> comparison.<\/li><\/ul>\n\n\n\n<p>The <code>in_array()<\/code> function searches for the <code>$needle<\/code> in the <code>$haystack<\/code> using the loose comparison (<code>==<\/code>). To use the strict comparison (<code>===<\/code>), you need to set the <code>$strict<\/code> argument to <code>true<\/code>.<\/p>\n\n\n\n<p>If the value to check is a string, the <code>in_array()<\/code> function will search for it case-sensitively.<\/p>\n\n\n\n<p>The <code>in_array()<\/code> function returns <code>true<\/code> if the <code>$needle<\/code> exists in the <code>$array<\/code>; otherwise, it returns <code>false<\/code>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP in_array() function examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>in_array()<\/code> function.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Simple PHP in_array() function examples<\/h3>\n\n\n\n<p>The following example uses the <code>in_array()<\/code> function to check if the value <code>'update'<\/code> is in the <code>$actions<\/code> array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$actions = &#91;\r\n\t<span class=\"hljs-string\">'new'<\/span>,\r\n\t<span class=\"hljs-string\">'edit'<\/span>,\r\n\t<span class=\"hljs-string\">'update'<\/span>,\r\n\t<span class=\"hljs-string\">'view'<\/span>,\r\n\t<span class=\"hljs-string\">'delete'<\/span>,\r\n];\r\n\r\n$result = in_array(<span class=\"hljs-string\">'update'<\/span>, $actions);\r\n\r\nvar_dump($result); <span class=\"hljs-comment\">\/\/ bool(true)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It returns <code>true<\/code>.<\/p>\n\n\n\n<p>The following example returns <code>false<\/code> because the <code>publish<\/code> value doesn&#8217;t exist in the <code>$actions<\/code> array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$actions = &#91;\r\n\t<span class=\"hljs-string\">'new'<\/span>,\r\n\t<span class=\"hljs-string\">'edit'<\/span>,\r\n\t<span class=\"hljs-string\">'update'<\/span>,\r\n\t<span class=\"hljs-string\">'view'<\/span>,\r\n\t<span class=\"hljs-string\">'delete'<\/span>,\r\n];\r\n\r\n$result = in_array(<span class=\"hljs-string\">'publish'<\/span>, $actions);\r\n\r\nvar_dump($result); <span class=\"hljs-comment\">\/\/ bool(false)<\/span>\r<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example returns <code>false<\/code> because the value <code>'New'<\/code> doesn&#8217;t exist in the <code>$actions<\/code> array. Note that the <code>in_array()<\/code> compares the strings case-sensitively:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$actions = &#91;\r\n\t<span class=\"hljs-string\">'new'<\/span>,\r\n\t<span class=\"hljs-string\">'edit'<\/span>,\r\n\t<span class=\"hljs-string\">'update'<\/span>,\r\n\t<span class=\"hljs-string\">'view'<\/span>,\r\n\t<span class=\"hljs-string\">'delete'<\/span>,\r\n];\r\n\r\n$result = in_array(<span class=\"hljs-string\">'New'<\/span>, $actions);\r\n\r\nvar_dump($result); <span class=\"hljs-comment\">\/\/ bool(false)<\/span>\r\n<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Using PHP in_array() function with the strict comparison example<\/h3>\n\n\n\n<p>The following example uses the <code>in_array()<\/code> function to find the number <code>15<\/code> in the <code>$user_ids<\/code> array. It returns <code>true<\/code> because the <code>in_array()<\/code> function compares the values using the loose comparison (<code>==<\/code>):<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$user_ids = &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-string\">'15'<\/span>, <span class=\"hljs-string\">'20'<\/span>, <span class=\"hljs-number\">30<\/span>];\r\n\r\n$result = in_array(<span class=\"hljs-number\">15<\/span>, $user_ids);\r\n\r\nvar_dump($result); <span class=\"hljs-comment\">\/\/  bool(true)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To use the strict comparison, you pass <code>false<\/code> to the third argument (<code>$strict<\/code>) of the <code>in_array()<\/code> function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$user_ids = &#91;<span class=\"hljs-number\">10<\/span>, <span class=\"hljs-string\">'15'<\/span>, <span class=\"hljs-string\">'20'<\/span>, <span class=\"hljs-number\">30<\/span>];\r\n\r\n$result = in_array(<span class=\"hljs-number\">15<\/span>, $user_ids, <span class=\"hljs-keyword\">true<\/span>);\r\n\r\nvar_dump($result); <span class=\"hljs-comment\">\/\/  bool(false)<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This time the <code>in_array()<\/code> function returns <code>false<\/code> instead.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">3) Using PHP in_array() function with the searched value is an array example<\/h3>\n\n\n\n<p>The following example uses the <code>in_array()<\/code> function with the searched value is an array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$colors = &#91;\r\n\t&#91;<span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-string\">'green'<\/span>, <span class=\"hljs-string\">'blue'<\/span>],\r\n\t&#91;<span class=\"hljs-string\">'cyan'<\/span>, <span class=\"hljs-string\">'magenta'<\/span>, <span class=\"hljs-string\">'yellow'<\/span>, <span class=\"hljs-string\">'black'<\/span>],\r\n\t&#91;<span class=\"hljs-string\">'hue'<\/span>, <span class=\"hljs-string\">'saturation'<\/span>, <span class=\"hljs-string\">'lightness'<\/span>]\r\n];\r\n\r\n<span class=\"hljs-keyword\">if<\/span> (in_array(&#91;<span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-string\">'green'<\/span>, <span class=\"hljs-string\">'blue'<\/span>], $colors)) {\r\n\t<span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">'RGB colors found'<\/span>;\r\n} <span class=\"hljs-keyword\">else<\/span> {\r\n\t<span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">'RGB colors are not found'<\/span>;\r\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">RGB colors found<\/code><\/span><\/pre>\n\n\n<h3 class=\"wp-block-heading\">4) Using PHP in_array() function with an array of objects example<\/h3>\n\n\n\n<p>The following defines the <code>Role<\/code> class that has two properties <code>$id<\/code> and <code>$name<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Role<\/span>\r\n<\/span>{\r\n\t<span class=\"hljs-keyword\">private<\/span> $id;\r\n\r\n\t<span class=\"hljs-keyword\">private<\/span> $name;\r\n\r\n\t<span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">__construct<\/span><span class=\"hljs-params\">($id, $name)<\/span>\r\n\t<\/span>{\r\n\t\t<span class=\"hljs-keyword\">$this<\/span>-&gt;id = $id;\r\n\t\t<span class=\"hljs-keyword\">$this<\/span>-&gt;name = $name;\r\n\t}\r\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This example illustrates how to use the <code>in_array()<\/code> function to check if a <code>Role<\/code> object exists in an array of <code>Role<\/code> objects:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n<span class=\"hljs-comment\">\/\/ Role class<\/span>\n\n$roles = &#91;\r\n\t<span class=\"hljs-keyword\">new<\/span> Role(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'admin'<\/span>),\r\n\t<span class=\"hljs-keyword\">new<\/span> Role(<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-string\">'editor'<\/span>),\r\n\t<span class=\"hljs-keyword\">new<\/span> Role(<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-string\">'subscribe'<\/span>),\r\n];\r\n\r\n<span class=\"hljs-keyword\">if<\/span> (in_array(<span class=\"hljs-keyword\">new<\/span> Role(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'admin'<\/span>), $roles)) {\r\n\t<span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">'found it'<\/span>;\r\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">found it!<\/code><\/span><\/pre>\n\n\n<p>If you set the <code>$strict<\/code> to <code>true<\/code>, the <code>in_array()<\/code> function will compare objects using their identities instead of values. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-comment\">\/\/ Role class<\/span>\n\n$roles = &#91;\r\n\t<span class=\"hljs-keyword\">new<\/span> Role(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'admin'<\/span>),\r\n\t<span class=\"hljs-keyword\">new<\/span> Role(<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-string\">'editor'<\/span>),\r\n\t<span class=\"hljs-keyword\">new<\/span> Role(<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-string\">'subscribe'<\/span>),\r\n];\r\n\r\n<span class=\"hljs-keyword\">if<\/span> (in_array(<span class=\"hljs-keyword\">new<\/span> Role(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'admin'<\/span>), $roles, <span class=\"hljs-keyword\">true<\/span>)) {\r\n\t<span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">'found it!'<\/span>;\r\n} <span class=\"hljs-keyword\">else<\/span> {\r\n\t<span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">'not found!'<\/span>;\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">not found!<\/code><\/span><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use PHP <code>in_array()<\/code> function to check if a value exists in an array.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1086\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-in_array\/\"\n\t\t\t\tdata-post-title=\"PHP in_array\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1086\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-in_array\/\"\n\t\t\t\tdata-post-title=\"PHP in_array\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn how to use the PHP in_array() function to check if a value exists in an array. Introduction to the PHP in_array() function The in_array() function returns true if a value exists in an array. Here&#8217;s the syntax of the in_array() function: In this syntax: $needle is the searched [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":52,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1086","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1086","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1086"}],"version-history":[{"count":3,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1086\/revisions"}],"predecessor-version":[{"id":1089,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1086\/revisions\/1089"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1086"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}