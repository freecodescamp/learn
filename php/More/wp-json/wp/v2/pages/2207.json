{"id":2207,"date":"2021-07-09T07:29:15","date_gmt":"2021-07-09T07:29:15","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=2207"},"modified":"2021-10-31T06:48:45","modified_gmt":"2021-10-31T06:48:45","slug":"php-fetch","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-pdo\/php-fetch\/","title":{"rendered":"fetch"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PHP <code>fetch()<\/code> method of the <code>PDOStatement<\/code> object to fetch a row from the result set.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP fetch() method<\/h2>\n\n\n\n<p>The <code>fetch()<\/code> is a method of the <code>PDOStatement<\/code> class. The <code>fetch()<\/code> method allows you to fetch a row from a result set associated with a <code>PDOStatement<\/code> object.<\/p>\n\n\n\n<p>Internally, the <code>fetch()<\/code> method fetches a single row from a result set and moves the internal pointer to the next row in the result set. Therefore, the subsequent call to the <code>fetch()<\/code> method will return the next row from the result set.<\/p>\n\n\n\n<p>To fetch all rows from a result set one by one, you typically use the <code>fetch()<\/code> method in a <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-while\/\">while<\/a><\/code> loop.<\/p>\n\n\n\n<p>The following shows the syntax of the <code>fetch()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">fetch<\/span><span class=\"hljs-params\">(\n    int $mode = PDO::FETCH_DEFAULT, \n    int $cursorOrientation = PDO::FETCH_ORI_NEXT, \n    int $cursorOffset = <span class=\"hljs-number\">0<\/span>\n)<\/span>: <span class=\"hljs-title\">mixed<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>fetch()<\/code> method accepts three optional parameters. The most important one is the first parameter $mode.<\/p>\n\n\n\n<p>The <code>$mode<\/code> parameter determines how the <code>fetch()<\/code> returns the next row. The $mode parameter accepts one of the <code>PDO::FETCH_*<\/code> constants. The most commonly used modes are:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>PDO::FETCH_BOTH<\/code> &#8211; returns an array indexed by both column name and 0-indexed column number.<\/li><li><code>PDO::FETCH_ASSOC<\/code> &#8211; returns an array indexed by column name<\/li><li><code>PDO::FETCH_CLASS<\/code> &#8211; returns a new class instance by mapping the columns to the object&#8217;s properties.<\/li><\/ul>\n\n\n\n<p>The <code>fetch()<\/code> method returns a value depending on the <code>$mode<\/code> parameter. It returns <code>false<\/code> on failure.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Using the PHP fetch() method with the query() method<\/h2>\n\n\n\n<p>If a query doesn&#8217;t accept a parameter, you can fetch a row from the result set as follows:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, execute the query by calling the <code>query()<\/code> method of the <code>PDO<\/code> object.<\/li><li>Then, fetch each row from the result set using the <code>fetch()<\/code> method and a while loop:<\/li><\/ul>\n\n\n\n<p>The following example shows how to use the <code>fetch()<\/code> method to select each row from the books table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-comment\">\/\/ connect to the database to get the PDO instance<\/span>\n$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;\n\n<span class=\"hljs-comment\">\/\/ execute a query<\/span>\n$sql = <span class=\"hljs-string\">'SELECT book_id, title FROM books'<\/span>;\n$statement = $pdo-&gt;query($sql);\n\n<span class=\"hljs-comment\">\/\/ fetch the next row<\/span>\n<span class=\"hljs-keyword\">while<\/span> (($row = $statement-&gt;fetch(PDO::FETCH_ASSOC)) !== <span class=\"hljs-keyword\">false<\/span>) {\n    <span class=\"hljs-keyword\">echo<\/span> $row&#91;<span class=\"hljs-string\">'title'<\/span>] . <span class=\"hljs-string\">'&lt;br&gt;'<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, <a href=\"https:\/\/www.CodeCamp\/php-pdo\/php-pdo-mysql\/\">connect to the <code>bookdb<\/code> database<\/a> using the <code>connect.php<\/code> script.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, execute a query that selects the <code>book_id<\/code> and <code>title<\/code> from the <code>books<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$sql = <span class=\"hljs-string\">'SELECT book_id, title FROM books'<\/span>;\n$statement = $pdo-&gt;query($sql);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, fetch each row from the result set until there&#8217;s no more row to fetch and display the book title in each iteration.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">while<\/span> (($row = $statement-&gt;fetch(PDO::FETCH_ASSOC)) !== <span class=\"hljs-keyword\">false<\/span>) {\n    <span class=\"hljs-keyword\">echo<\/span> $row&#91;<span class=\"hljs-string\">'title'<\/span>] . <span class=\"hljs-string\">'&lt;br&gt;'<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Using the fetch() method with a prepared statement<\/h2>\n\n\n\n<p>When a query accepts one or more parameters, you can fetch the next row from the result set as follows:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, execute the <a href=\"https:\/\/www.CodeCamp\/php-pdo\/php-prepared-statement\/\">prepared statement<\/a>.<\/li><li>Second, fetch the next row from the result set using the <code>fetch()<\/code> method.<\/li><\/ul>\n\n\n\n<p>The following example shows how to <code>fetch()<\/code> to fetch a book from the books table with publisher id 1:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-comment\">\/\/ connect to the database to get the PDO instance<\/span>\n$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;\n\n$sql = <span class=\"hljs-string\">'SELECT book_id, title \n        FROM books \n        WHERE publisher_id =:publisher_id'<\/span>;\n\n<span class=\"hljs-comment\">\/\/ prepare the query for execution<\/span>\n$statement = $pdo-&gt;prepare($sql);\n\n<span class=\"hljs-comment\">\/\/ execute the query<\/span>\n$statement-&gt;execute(&#91;\n    <span class=\"hljs-string\">':publisher_id'<\/span> =&gt; <span class=\"hljs-number\">1<\/span>\n]);\n\n<span class=\"hljs-comment\">\/\/ fetch the next row<\/span>\n<span class=\"hljs-keyword\">while<\/span> (($row = $statement-&gt;fetch(PDO::FETCH_ASSOC)) !== <span class=\"hljs-keyword\">false<\/span>) {\n    <span class=\"hljs-keyword\">echo<\/span> $row&#91;<span class=\"hljs-string\">'title'<\/span>] . PHP_EOL;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the <code>fetch()<\/code> method to fetch a row from the result set associated with a <code>PDOStatement<\/code> object.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2207\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-pdo\/php-fetch\/\"\n\t\t\t\tdata-post-title=\"fetch\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2207\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-pdo\/php-fetch\/\"\n\t\t\t\tdata-post-title=\"fetch\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn how to use the PHP fetch() method of the PDOStatement object to fetch a row from the result set. Introduction to the PHP fetch() method The fetch() is a method of the PDOStatement class. The fetch() method allows you to fetch a row from a result set associated with [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":21,"menu_order":11,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-2207","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2207","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=2207"}],"version-history":[{"count":3,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2207\/revisions"}],"predecessor-version":[{"id":2803,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2207\/revisions\/2803"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/21"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=2207"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}