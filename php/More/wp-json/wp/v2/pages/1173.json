{"id":1173,"date":"2021-04-18T01:45:55","date_gmt":"2021-04-18T01:45:55","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1173"},"modified":"2021-09-04T10:48:39","modified_gmt":"2021-09-04T10:48:39","slug":"php-create-temp-file","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-create-temp-file\/","title":{"rendered":"PHP Create Temp File"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PHP <code>tmpfile()<\/code> and <code>tempnam()<\/code> functions to create a temporary file.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the temp file<\/h2>\n\n\n\n<p>A temporary file only exists during the execution of the script. It means that PHP automatically deletes the temporary file when the script ends. <\/p>\n\n\n\n<p>To create a temporary file, you use the <code>tmpfile()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">tmpfile ( ) : resource|<span class=\"hljs-literal\">false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>tmpfile()<\/code> function creates a temporary file in a read\/write (<code>w+<\/code>) mode. The <code>tmpfile()<\/code> function returns the filehandle. If the function fails to create the file, it returns <code>false<\/code>.<\/p>\n\n\n\n<p>Note that the <code>tmpfile()<\/code> function creates a temporary file with a unique name.<\/p>\n\n\n\n<p>In fact, PHP automatically deletes the temporary file created by the <code>tmpfile()<\/code> function:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>When you close the file by calling the <code>fclose()<\/code> function.<\/li><li>When the file handle doesn&#8217;t have any references.<\/li><li>or when the script ends.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">PHP tmpfile() function example<\/h2>\n\n\n\n<p>The following example uses the <code>tmpfile()<\/code> function to create a new temporary file and write a text to it:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$f = tmpfile();\r\n\r\n<span class=\"hljs-keyword\">if<\/span> (<span class=\"hljs-keyword\">false<\/span> !== $f) {\r\n    <span class=\"hljs-comment\">\/\/ write some text to the file<\/span>\r\n    fputs($f, <span class=\"hljs-string\">'The current time is '<\/span> . strftime(<span class=\"hljs-string\">'%c'<\/span>));\r\n}\r\n\r\n<span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">'The current time is '<\/span> . strftime(<span class=\"hljs-string\">'%c'<\/span>);\r\n\r\n<span class=\"hljs-keyword\">exit<\/span>(<span class=\"hljs-number\">1<\/span>);\n<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, create a new temporary file using the <code>tmpfile()<\/code> function.<\/li><li>Second, write a string to the file using the <code>fputs()<\/code> function.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">The tempnam() function<\/h2>\n\n\n\n<p>The <code>tempnam()<\/code> function creates a temporary file in a directory and returns the full path to the temporary file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">tempnam ( string $directory , string $prefix ) : string|<span class=\"hljs-keyword\">false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>tempnam()<\/code> function has two parameters. <\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$directory<\/code> is the directory of the temporary file. If the directory doesn&#8217;t exist or isn&#8217;t writable, the <code>tempnam()<\/code> creates the temporary file in the system temporary directory specified by the <code>TMPDIR<\/code> environment variable on Unix or the <code>TMP<\/code> environment variable on Windows.<\/li><li><code>$prefix<\/code> is the prefix of the temporary file name.<\/li><\/ul>\n\n\n\n<p>The following example shows how to use the <code>tempnam()<\/code> function to create a temporary file in the <code>tmp<\/code> directory:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n$name = tempnam(<span class=\"hljs-string\">'tmp'<\/span>, <span class=\"hljs-string\">'php'<\/span>);\n\r\n<span class=\"hljs-comment\">\/\/ full path to the temp file<\/span>\r\n<span class=\"hljs-keyword\">echo<\/span> $name; <span class=\"hljs-comment\">\/\/C:\\xampp\\htdocs\\tmp\\phpA125.tmp<\/span>\n\r\n<span class=\"hljs-comment\">\/\/ open the temporary file<\/span>\r\n$f = fopen($name, <span class=\"hljs-string\">'w+'<\/span>);\r\n<span class=\"hljs-keyword\">if<\/span> ($f) {\r\n    <span class=\"hljs-comment\">\/\/ write a text to the file<\/span>\r\n    fputs($f, <span class=\"hljs-string\">'the current time is '<\/span> . strftime(<span class=\"hljs-string\">'%c'<\/span>));\r\n    fclose($f);\r\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, if you pass an empty string to the directory, the <code>tempnam()<\/code> function will create the temporary file in the system temporary directory e.g., on Windows, it is: <code>C:\\Users\\&lt;username>\\AppData\\Local\\Temp\\php778.tmp<\/code><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the <code>tmpfile()<\/code> function to create a temporary file that exists only during the execution of the script.<\/li><li>Use the <code>tmpname()<\/code> function to create a temporary file in a directory and return the full path of the file.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1173\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-create-temp-file\/\"\n\t\t\t\tdata-post-title=\"PHP Create Temp File\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1173\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-create-temp-file\/\"\n\t\t\t\tdata-post-title=\"PHP Create Temp File\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn how to use the PHP tmpfile() and tempnam() functions to create a temporary file. Introduction to the temp file A temporary file only exists during the execution of the script. It means that PHP automatically deletes the temporary file when the script ends. To create a temporary file, [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":148,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1173","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1173","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1173"}],"version-history":[{"count":4,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1173\/revisions"}],"predecessor-version":[{"id":2537,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1173\/revisions\/2537"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1173"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}