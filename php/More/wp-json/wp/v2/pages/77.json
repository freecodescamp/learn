{"id":77,"date":"2021-03-08T00:13:38","date_gmt":"2021-03-08T00:13:38","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=77"},"modified":"2021-07-15T07:32:54","modified_gmt":"2021-07-15T07:32:54","slug":"php-datetime","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-oop\/php-datetime\/","title":{"rendered":"PHP DateTime"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to work with the date and time in an object-oriented way.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP DateTime class<\/h2>\n\n\n\n<p>PHP provides a set of date and time classes that allow you to work with the date and time in an object-oriented way.<\/p>\n\n\n\n<p>To create a new date and time object, you use the <code>DateTime<\/code> class. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime();\n\nvar_dump($datetime);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">object(DateTime)<span class=\"hljs-comment\">#1 (3) {<\/span>\n    &#91;<span class=\"hljs-string\">\"date\"<\/span>]=&gt; string(<span class=\"hljs-number\">26<\/span>) <span class=\"hljs-string\">\"2021-07-15 06:30:40.294788\"<\/span>\n    &#91;<span class=\"hljs-string\">\"timezone_type\"<\/span>]=&gt;  int(<span class=\"hljs-number\">3<\/span>)\n    &#91;<span class=\"hljs-string\">\"timezone\"<\/span>]=&gt;  string(<span class=\"hljs-number\">13<\/span>) <span class=\"hljs-string\">\"Europe\/Berlin\"<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>DateTime<\/code> object represents the current date and time in the timezone specified in the PHP configuration file (<code>php.ini<\/code>)<\/p>\n\n\n\n<p>To set a new timezone, you create a new <code>DateTimeZone<\/code> object and pass it to the <code>setTimezone()<\/code> method of the <code>DateTime<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime();\n\n$timezone = <span class=\"hljs-keyword\">new<\/span> DateTimeZone(<span class=\"hljs-string\">'America\/Los_Angeles'<\/span>);\n$datetime-&gt;setTimezone($timezone);\n\nvar_dump($datetime);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">object(DateTime)<span class=\"hljs-comment\">#1 (3) {<\/span>\n    &#91;<span class=\"hljs-string\">\"date\"<\/span>]=&gt; string(<span class=\"hljs-number\">26<\/span>) <span class=\"hljs-string\">\"2021-07-14 21:33:27.986925\"<\/span>\n    &#91;<span class=\"hljs-string\">\"timezone_type\"<\/span>]=&gt; int(<span class=\"hljs-number\">3<\/span>)\n    &#91;<span class=\"hljs-string\">\"timezone\"<\/span>]=&gt; string(<span class=\"hljs-number\">19<\/span>) <span class=\"hljs-string\">\"America\/Los_Angeles\"<\/span>\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we create a new <code>DateTimeZone<\/code> object and set it to <code>\"America\/Los_Angeles\"<\/code>. To get valid timezones supported by PHP, <a href=\"https:\/\/www.php.net\/manual\/en\/timezones.php\" target=\"_blank\" rel=\"noreferrer noopener\">check out the timezone list<\/a>.<\/p>\n\n\n\n<p>To format a <code>DateTime<\/code> object, you use the <code>format()<\/code> method. The format string parameters are the same as those you use for the <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-date\/\">date()<\/a><\/code> function. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime();\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;format(<span class=\"hljs-string\">'m\/d\/Y g:i A'<\/span>); <\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-number\">07<\/span>\/<span class=\"hljs-number\">15<\/span>\/<span class=\"hljs-number\">2021<\/span> <span class=\"hljs-number\">6<\/span>:<span class=\"hljs-number\">38<\/span> AM<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To set a specific date and time, you can pass a date &amp; time string to the <code>DateTime()<\/code> constructor like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'12\/31\/2019 12:00 PM'<\/span>);\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;format(<span class=\"hljs-string\">'m\/d\/Y g:i A'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Or you can use the <code>setDate()<\/code> function to set a date:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime();\n$datetime-&gt;setDate(<span class=\"hljs-number\">2020<\/span>, <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">1<\/span>);\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;format(<span class=\"hljs-string\">'m\/d\/Y g:i A'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-number\">05<\/span>\/<span class=\"hljs-number\">01<\/span>\/<span class=\"hljs-number\">2020<\/span> <span class=\"hljs-number\">6<\/span>:<span class=\"hljs-number\">42<\/span> AM<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The time is derived from the current time. To set the time, you use the <code>setTime()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime();\n$datetime-&gt;setDate(<span class=\"hljs-number\">2020<\/span>, <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">1<\/span>);\n$datetime-&gt;setTime(<span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">30<\/span>, <span class=\"hljs-number\">0<\/span>);\n\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;format(<span class=\"hljs-string\">'m\/d\/Y g:i A'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-number\">05<\/span>\/<span class=\"hljs-number\">01<\/span>\/<span class=\"hljs-number\">2020<\/span> <span class=\"hljs-number\">5<\/span>:<span class=\"hljs-number\">30<\/span> AM<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since the <code>setDate()<\/code>, <code>setTime()<\/code>, and <code>setTimeZone()<\/code> method returns the <code>DateTime<\/code> object, you can chain them like this which is quite convenient.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime();\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;setDate(<span class=\"hljs-number\">2020<\/span>, <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">1<\/span>)\n    -&gt;setTime(<span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">30<\/span>)\n    -&gt;setTimezone(<span class=\"hljs-keyword\">new<\/span> DateTimeZone(<span class=\"hljs-string\">'America\/New_York'<\/span>))\n    -&gt;format(<span class=\"hljs-string\">'m\/d\/Y g:i A'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-number\">04<\/span>\/<span class=\"hljs-number\">30<\/span>\/<span class=\"hljs-number\">2020<\/span> <span class=\"hljs-number\">11<\/span>:<span class=\"hljs-number\">30<\/span> PM<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Creating a DateTime object from a string<\/h2>\n\n\n\n<p>When you pass the date string &#8217;06\/08\/2021&#8242; to the <code>DateTime()<\/code> constructor or <code>setDate()<\/code> function, PHP interprets it as <code>m\/d\/Y<\/code>. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'06\/08\/2021'<\/span>);\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;format(<span class=\"hljs-string\">'F jS, Y'<\/span>); <\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">June <span class=\"hljs-number\">8<\/span>th, <span class=\"hljs-number\">2021<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you want to pass it as August 6th, 2021, you need to use the &#8211; or . instead of \/. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'06-08-2021'<\/span>);\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;format(<span class=\"hljs-string\">'F jS, Y'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">August <span class=\"hljs-number\">6<\/span>th, <span class=\"hljs-number\">2021<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, if you want to parse the date string &#8217;06\/08\/2021&#8242; as d\/m\/Y, you need to replace the \/ with &#8211; or . manually:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$ds = <span class=\"hljs-string\">'06\/08\/2021'<\/span>;\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime(str_replace(<span class=\"hljs-string\">'\/'<\/span>, <span class=\"hljs-string\">'-'<\/span>, $ds));\n\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;format(<span class=\"hljs-string\">'F jS, Y'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">August <span class=\"hljs-number\">6<\/span>th, <span class=\"hljs-number\">2021<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>A better way to do it is to use the <code>createFromFormat()<\/code> static method of the <code>DateTime<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-20\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$ds = <span class=\"hljs-string\">'06\/08\/2021'<\/span>;\n$datetime = DateTime::createFromFormat(<span class=\"hljs-string\">'d\/m\/Y'<\/span>, $ds);\n\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;format(<span class=\"hljs-string\">'F jS, Y'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-20\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we pass the date format as the first argument and the date string as the second argument.<\/p>\n\n\n\n<p>Note that when you pass a date string without the time, the <code>DateTime()<\/code> constructor uses midnight time. However, the <code>createFromFormat()<\/code> method uses the current time.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Comparing two DateTime objects<\/h2>\n\n\n\n<p>PHP allows you to compare two DateTime objects using the comparison operators including &gt;, &gt;=, &lt;, &lt;=, ==, &lt;=&gt;. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-21\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime1 = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'01\/01\/2021 10:00 AM'<\/span>);\n$datetime2 = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'01\/01\/2021 09:00 AM'<\/span>);\n\nvar_dump($datetime1 &lt; $datetime2); <span class=\"hljs-comment\">\/\/ false<\/span>\nvar_dump($datetime1 &gt; $datetime2); <span class=\"hljs-comment\">\/\/ true<\/span>\nvar_dump($datetime1 == $datetime2); <span class=\"hljs-comment\">\/\/ false<\/span>\nvar_dump($datetime1 &lt;=&gt; $datetime2); <span class=\"hljs-comment\">\/\/ 1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-21\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Calculating the differences between two DateTime objects<\/h2>\n\n\n\n<p>The <code>diff()<\/code> method of the <code>DateTime()<\/code> object returns the difference between two <code>DateTime()<\/code> objects as a <code>DateInterval<\/code> object. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-22\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$dob = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'01\/01\/1990'<\/span>);\n$to_date = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'07\/15\/2021'<\/span>);\n\n$age = $to_date-&gt;diff($dob);\nvar_dump($age);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-22\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-23\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">object(DateInterval)<span class=\"hljs-comment\">#3 (16) {<\/span>\n    &#91;<span class=\"hljs-string\">\"y\"<\/span>]=&gt;    int(<span class=\"hljs-number\">31<\/span>)\n    &#91;<span class=\"hljs-string\">\"m\"<\/span>]=&gt;    int(<span class=\"hljs-number\">6<\/span>)\n    &#91;<span class=\"hljs-string\">\"d\"<\/span>]=&gt;    int(<span class=\"hljs-number\">14<\/span>)\n    &#91;<span class=\"hljs-string\">\"h\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"i\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"s\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"f\"<\/span>]=&gt;    float(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"weekday\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"weekday_behavior\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"first_last_day_of\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"invert\"<\/span>]=&gt;    int(<span class=\"hljs-number\">1<\/span>)\n    &#91;<span class=\"hljs-string\">\"days\"<\/span>]=&gt;    int(<span class=\"hljs-number\">11518<\/span>)\n    &#91;<span class=\"hljs-string\">\"special_type\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"special_amount\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"have_weekday_relative\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n    &#91;<span class=\"hljs-string\">\"have_special_relative\"<\/span>]=&gt;    int(<span class=\"hljs-number\">0<\/span>)\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-23\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>DateInterval<\/code> represents the differences between two dates in the year, month, day, hour, etc. To format the difference, you use the <code>DateInterval<\/code>&#8216;s format. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-24\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$dob = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'01\/01\/1990'<\/span>);\n$to_date = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'07\/15\/2021'<\/span>);\n\n<span class=\"hljs-keyword\">echo<\/span> $to_date-&gt;diff($dob)-&gt;format(<span class=\"hljs-string\">'%Y years, %m months, %d days'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-24\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-25\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-number\">31<\/span> years, <span class=\"hljs-number\">6<\/span> months, <span class=\"hljs-number\">14<\/span> days<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-25\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p><a href=\"https:\/\/www.php.net\/manual\/en\/dateinterval.format.php\">Check out all the DateInterval format parameters<\/a>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Adding an interval to a DateTime object<\/h2>\n\n\n\n<p>To add an interval to date, you create a new <code>DateInterval<\/code> object and pass it to the <code>add()<\/code> method. The following example adds 1 year 2 months to the date <code>01\/01\/2021<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-26\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$datetime = <span class=\"hljs-keyword\">new<\/span> DateTime(<span class=\"hljs-string\">'01\/01\/2021'<\/span>);\n$datetime-&gt;add(<span class=\"hljs-keyword\">new<\/span> DateInterval(<span class=\"hljs-string\">'P1Y2M'<\/span>));\n<span class=\"hljs-keyword\">echo<\/span> $datetime-&gt;format(<span class=\"hljs-string\">'m\/d\/Y'<\/span>);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-26\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-27\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-number\">03<\/span>\/<span class=\"hljs-number\">01<\/span>\/<span class=\"hljs-number\">2022<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-27\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To format a date interval, you use the <a href=\"https:\/\/www.php.net\/manual\/en\/dateinterval.format.php\">date interval format strings<\/a>.<\/p>\n\n\n\n<p>To subtract an interval from a <code>DateTime<\/code> object, you create a negative interval and use the <code>add()<\/code> method.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the <code>DateTime<\/code> class to work with the date and time.<\/li><li>Use the <code>DateTimeZone<\/code> class to work with time zones.<\/li><li>Use the comparison operators to compare two <code>DateTime<\/code> objects.<\/li><li>Use the <code>diff()<\/code> method to calculate the difference between to <code>DateTime<\/code> objects.<\/li><li>Use the <code>DateInterval<\/code> class to represent a date and time interval.<\/li><li>Use the <code>add()<\/code> method to add an interval to or subtract an interval from a <code>DateTime<\/code> object.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"77\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-oop\/php-datetime\/\"\n\t\t\t\tdata-post-title=\"PHP DateTime\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"77\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-oop\/php-datetime\/\"\n\t\t\t\tdata-post-title=\"PHP DateTime\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to work with the date and time in an object-oriented way.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1753,"menu_order":36,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-77","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/77","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=77"}],"version-history":[{"count":4,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/77\/revisions"}],"predecessor-version":[{"id":2309,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/77\/revisions\/2309"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1753"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=77"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}