{"id":2209,"date":"2021-07-09T08:30:29","date_gmt":"2021-07-09T08:30:29","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=2209"},"modified":"2021-07-09T10:14:36","modified_gmt":"2021-07-09T10:14:36","slug":"php-fetchall","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-pdo\/php-fetchall\/","title":{"rendered":"fetchAll"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PHP <code>fetchAll()<\/code> method of the <code>PDOStatement<\/code> object to return an array containing all rows of a result set.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP fetchAll() method<\/h2>\n\n\n\n<p>The <code>fetchAll()<\/code> is a method of the <code>PDOStatement<\/code> class. The <code>fetchAll()<\/code> method allows you to fetch all rows from a result set associated with a <code>PDOStatement<\/code> object into an array.<\/p>\n\n\n\n<p>The following shows the syntax of the <code>fetchAll()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">fetchAll<\/span><span class=\"hljs-params\">(int $mode = PDO::FETCH_DEFAULT)<\/span>: <span class=\"hljs-title\">array<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>$mode<\/code> parameter determines how the <code>fetchAll()<\/code> returns the next row. The <code>$mode<\/code> parameter accepts one of the <code>PDO::FETCH_*<\/code> constants. The most commonly used modes are:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>PDO::FETCH_BOTH<\/code> &#8211; returns an array indexed by both column name and 0-indexed column number. This is the default.<\/li><li><code>PDO::FETCH_ASSOC<\/code> &#8211; returns an array indexed by column name<\/li><li><code><a href=\"https:\/\/www.CodeCamp\/php-pdo\/pdo-fetch_class\/\">PDO::FETCH_CLASS<\/a><\/code> &#8211; returns a new class instance by mapping the columns to the object&#8217;s properties.<\/li><\/ul>\n\n\n\n<p>The <code>fetchAll()<\/code> method returns an array that contains all rows of a result set. <\/p>\n\n\n\n<p>If the result set is empty, the <code>fetchAll()<\/code> method returns an empty array. If the <code>fetchAll()<\/code> fails to fetch data, it&#8217;ll return <code>false<\/code>.<\/p>\n\n\n\n<p>It&#8217;s important to notice that if you have a large result set, the <code>fetchAll()<\/code> may consume a lot of server memory and possibly network resources. To avoid this, you should execute a query that retrieves only necessary data from the database server.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Using the PHP fetchAll() method with the query() method<\/h2>\n\n\n\n<p>If a query doesn&#8217;t accept a parameter, you can fetch all rows from the result set as follows:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, execute the query by calling the <code>query()<\/code> method of the <code>PDO<\/code> object.<\/li><li>Then, fetch all rows from the result set into an array using the <code>fetchAll()<\/code> method.<\/li><\/ul>\n\n\n\n<p>The following example illustrates how to use the <code>fetchAll()<\/code> method to select all rows from the <code>publishers<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-comment\">\/\/ connect to the database to get the PDO instance<\/span>\n$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;\n\n$sql = <span class=\"hljs-string\">'SELECT publisher_id, name \n        FROM publishers'<\/span>;\n\n<span class=\"hljs-comment\">\/\/ execute a query<\/span>\n$statement = $pdo-&gt;query($sql);\n\n<span class=\"hljs-comment\">\/\/ fetch all rows<\/span>\n$publishers = $statement-&gt;fetchAll(PDO::FETCH_ASSOC);\n\n<span class=\"hljs-comment\">\/\/ display the publisher name<\/span>\n<span class=\"hljs-keyword\">foreach<\/span> ($publishers <span class=\"hljs-keyword\">as<\/span> $publisher) {\n    <span class=\"hljs-keyword\">echo<\/span> $publisher&#91;<span class=\"hljs-string\">'name'<\/span>] . <span class=\"hljs-string\">'&lt;br&gt;'<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">1.McGraw-Hill Education\n2.Penguin\/Random House\n3.Hachette Book Group\n4.Harper Collins\n5.Simon and Schuster<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, <a href=\"https:\/\/www.CodeCamp\/php-pdo\/php-pdo-mysql\/\">connect to the <code>bookdb<\/code> database using the <code>connect.php<\/code> script<\/a>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, execute a query that selects the <code>publisher_id<\/code> and <code>name<\/code> from the <code>publishers<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">$sql = <span class=\"hljs-string\">'SELECT publisher_id, name \n        FROM publishers'<\/span>;\n$statement = $pdo-&gt;query($sql);<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, fetch all rows from the result set into an array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-comment\">\/\/ display the publishers<\/span>\n<span class=\"hljs-keyword\">foreach<\/span> ($publishers <span class=\"hljs-keyword\">as<\/span> $publisher) {\n    <span class=\"hljs-keyword\">echo<\/span> $publisher&#91;<span class=\"hljs-string\">'name'<\/span>] . <span class=\"hljs-string\">'&lt;br&gt;'<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Using the fetchAll() method with a prepared statement<\/h2>\n\n\n\n<p>If a query accepts one or more parameters, you can:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, execute a <a href=\"https:\/\/www.CodeCamp\/php-pdo\/php-prepared-statement\/\">prepared statement<\/a>.<\/li><li>Second, fetch all rows from the result set into an array using the <code>fetchAll()<\/code> method.<\/li><\/ul>\n\n\n\n<p>The following example shows how to use <code>fetchAll()<\/code> to fetch all publishers with the id greater than 2:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-comment\">\/\/ connect to the database to get the PDO instance<\/span>\n$pdo = <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'connect.php'<\/span>;\n\n$sql = <span class=\"hljs-string\">'SELECT publisher_id, name \n        FROM publishers\n        WHERE publisher_id &gt; :publisher_id'<\/span>;\n\n<span class=\"hljs-comment\">\/\/ execute a query<\/span>\n$statement = $pdo-&gt;prepare($sql);\n$statement-&gt;execute(&#91;\n    <span class=\"hljs-string\">':publisher_id'<\/span> =&gt; <span class=\"hljs-number\">2<\/span>\n]);\n<span class=\"hljs-comment\">\/\/ fetch all rows<\/span>\n$publishers = $statement-&gt;fetchAll(PDO::FETCH_ASSOC);\n\n<span class=\"hljs-comment\">\/\/ display the publishers<\/span>\n<span class=\"hljs-keyword\">foreach<\/span> ($publishers <span class=\"hljs-keyword\">as<\/span> $publisher) {\n    <span class=\"hljs-keyword\">echo<\/span> $publisher&#91;<span class=\"hljs-string\">'publisher_id'<\/span>] . <span class=\"hljs-string\">'.'<\/span> . $publisher&#91;<span class=\"hljs-string\">'name'<\/span>] . <span class=\"hljs-string\">'&lt;br&gt;'<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">3.Hachette Book Group\n4.Harper Collins\n5.Simon and Schuster<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the <code>fetchAll()<\/code> method to fetch a row from the result set associated with a <code>PDOStatement<\/code> object.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2209\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-pdo\/php-fetchall\/\"\n\t\t\t\tdata-post-title=\"fetchAll\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2209\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-pdo\/php-fetchall\/\"\n\t\t\t\tdata-post-title=\"fetchAll\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn how to use the PHP fetchAll() method of the PDOStatement object to return an array containing all rows of a result set. Introduction to the PHP fetchAll() method The fetchAll() is a method of the PDOStatement class. The fetchAll() method allows you to fetch all rows from a result [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":21,"menu_order":12,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-2209","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2209","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=2209"}],"version-history":[{"count":4,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2209\/revisions"}],"predecessor-version":[{"id":2223,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2209\/revisions\/2223"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/21"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=2209"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}