{"id":1054,"date":"2021-04-12T09:26:35","date_gmt":"2021-04-12T09:26:35","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1054"},"modified":"2021-06-26T14:44:19","modified_gmt":"2021-06-26T14:44:19","slug":"php-multidimensional-array","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-multidimensional-array\/","title":{"rendered":"PHP Multidimensional Array"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to define a PHP multidimensional array and manipulate its elements effectively.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to PHP multidimensional array<\/h2>\n\n\n\n<p>Typically, you have an <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-array\/\">array<\/a> with one dimension. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$scores = &#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>, <span class=\"hljs-number\">5<\/span>];<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Or <\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$rates = &#91;\n\t<span class=\"hljs-string\">'Excellent'<\/span> =&gt; <span class=\"hljs-number\">5<\/span>,\n\t<span class=\"hljs-string\">'Good'<\/span> =&gt; <span class=\"hljs-number\">4<\/span>,\n\t<span class=\"hljs-string\">'OK'<\/span> =&gt; <span class=\"hljs-number\">3<\/span>,\n\t<span class=\"hljs-string\">'Bad'<\/span> =&gt; <span class=\"hljs-number\">2<\/span>,\n\t<span class=\"hljs-string\">'Very Bad'<\/span> =&gt; <span class=\"hljs-number\">1<\/span>\n];<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Both <code>$scores<\/code> and <code>$rates<\/code> are one-dimensional arrays.<\/p>\n\n\n\n<p>A multidimensional array is an array that has more than one dimension. For example, a two-dimensional array is an array of arrays. It is like a table of rows and columns.<\/p>\n\n\n\n<p>In PHP, an element in an array can be another array. Therefore, to define a multidimensional array, you define an array of arrays. <\/p>\n\n\n\n<p>The following example uses an array of arrays to define a two-dimensional array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$tasks = &#91;\n    &#91;<span class=\"hljs-string\">'Learn PHP programming'<\/span>, <span class=\"hljs-number\">2<\/span>],\n    &#91;<span class=\"hljs-string\">'Practice PHP'<\/span>, <span class=\"hljs-number\">2<\/span>],\n    &#91;<span class=\"hljs-string\">'Work'<\/span>, <span class=\"hljs-number\">8<\/span>],\n    &#91;<span class=\"hljs-string\">'Do exercise'<\/span> <span class=\"hljs-number\">1<\/span>],\n];<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the <code>$tasks<\/code> array, the first dimension represents the tasks and the second dimension specifies hour spent for each.<\/p>\n\n\n\n<p>To dispaly all the elements in a multidimensional array, you use the <code>print_r()<\/code> function like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$tasks = &#91;\n\t&#91;<span class=\"hljs-string\">'Learn PHP programming'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Practice PHP'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Work'<\/span>, <span class=\"hljs-number\">8<\/span>],\n\t&#91;<span class=\"hljs-string\">'Do exercise'<\/span>, <span class=\"hljs-number\">1<\/span>],\n];\n\nprint_r($todo_list);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(    \n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Learn PHP programming\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">2<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Practice PHP\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">2<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">2<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Work\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">8<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">3<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-keyword\">Do<\/span> exercise\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">1<\/span>\n        )\n\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Adding elements to a PHP multidimensional array<\/h2>\n\n\n\n<p>To add an element to a multidimensional array, you use the the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$array&#91;] = &#91;element1, element2, ...];<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example, to add an element at the end of the <code>$tasks<\/code> array, you use the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$tasks = &#91;\n\t&#91;<span class=\"hljs-string\">'Learn PHP programming'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Practice PHP'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Work'<\/span>, <span class=\"hljs-number\">8<\/span>],\n\t&#91;<span class=\"hljs-string\">'Do exercise'<\/span>, <span class=\"hljs-number\">1<\/span>],\n];\n\n$tasks&#91;] = &#91;<span class=\"hljs-string\">'Build something matter in PHP'<\/span>, <span class=\"hljs-number\">2<\/span>];\n\nprint_r($tasks );<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Removing elements from a PHP multidimensional array<\/h2>\n\n\n\n<p>To remove an element from a multidimensional array, you can use the <code>unset()<\/code> function. <\/p>\n\n\n\n<p>The following example uses the <code>unset()<\/code> function to remove the third element of the $tasks array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$tasks = &#91;\n\t&#91;<span class=\"hljs-string\">'Learn PHP programming'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Practice PHP'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Work'<\/span>, <span class=\"hljs-number\">8<\/span>],\n\t&#91;<span class=\"hljs-string\">'Do exercise'<\/span>,<span class=\"hljs-number\">1<\/span>],\n];\n\n<span class=\"hljs-keyword\">unset<\/span>($tasks&#91;<span class=\"hljs-number\">2<\/span>]);\n\nprint_r($tasks);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Learn PHP programming\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">2<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Practice PHP\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">2<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">3<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-keyword\">Do<\/span> exercise\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">1<\/span>\n        )\n\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that the <code>unset()<\/code> function doesn&#8217;t change the array&#8217;s keys. To reindex the key, you can use the <code>array_splice()<\/code> function. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$tasks = &#91;\n\t&#91;<span class=\"hljs-string\">'Learn PHP programming'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Practice PHP'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Work'<\/span>, <span class=\"hljs-number\">8<\/span>],\n\t&#91;<span class=\"hljs-string\">'Do exercise'<\/span>, <span class=\"hljs-number\">1<\/span>],\n];\n\narray_splice($tasks&#91;<span class=\"hljs-number\">2<\/span>], <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">1<\/span>);\n\nprint_r($tasks);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Learn PHP programming\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">2<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Work\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">8<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">2<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-keyword\">Do<\/span> exercise\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">1<\/span>\n        )\n\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Iterating over elements of a multidimensional array using foreach<\/h2>\n\n\n\n<p>To iterate a multidimensional array, you use a nested <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-foreach\/\">foreach<\/a><\/code> loop like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$tasks = &#91;\n\t&#91;<span class=\"hljs-string\">'Learn PHP programming'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Practice PHP'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Work'<\/span>, <span class=\"hljs-number\">8<\/span>],\n\t&#91;<span class=\"hljs-string\">'Do exercise'<\/span>, <span class=\"hljs-number\">1<\/span>],\n];\n\n<span class=\"hljs-keyword\">foreach<\/span> ($tasks <span class=\"hljs-keyword\">as<\/span> $task) {\n\t<span class=\"hljs-keyword\">foreach<\/span> ($task <span class=\"hljs-keyword\">as<\/span> $task_detail) {\n\t\t<span class=\"hljs-keyword\">echo<\/span> $task_detail . <span class=\"hljs-string\">'&lt;br&gt;'<\/span>;\n\t}\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">Learn PHP programming\n<span class=\"hljs-number\">2<\/span>\nPractice PHP\n<span class=\"hljs-number\">2<\/span>\nWork\n<span class=\"hljs-number\">8<\/span>\n<span class=\"hljs-keyword\">Do<\/span> exercise\n<span class=\"hljs-number\">1<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Accessing elements of a multidimensional array<\/h2>\n\n\n\n<p>To access an element in an multidimensional array, you use the square brackets (<code>[]<\/code>):<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$array&#91;key]&#91;key]&#91;key]...<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example, to access the number of hour spent for the <code>\"Learn PHP programming\"<\/code> task, you use the following code:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$tasks = &#91;\n\t&#91;<span class=\"hljs-string\">'Learn PHP programming'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Practice PHP'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Work'<\/span>, <span class=\"hljs-number\">8<\/span>],\n\t&#91;<span class=\"hljs-string\">'Do excercise'<\/span>, <span class=\"hljs-number\">1<\/span>],\n];\n\n<span class=\"hljs-keyword\">echo<\/span> $tasks&#91;<span class=\"hljs-number\">0<\/span>]&#91;<span class=\"hljs-number\">1<\/span>];<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Sorting a multidimensional array<\/h2>\n\n\n\n<p>To sort a multidimensional array, you use the usort() function. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$tasks = &#91;\n\t&#91;<span class=\"hljs-string\">'Learn PHP programming'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Practice PHP'<\/span>, <span class=\"hljs-number\">2<\/span>],\n\t&#91;<span class=\"hljs-string\">'Work'<\/span>, <span class=\"hljs-number\">8<\/span>],\n\t&#91;<span class=\"hljs-string\">'Do excercise'<\/span>, <span class=\"hljs-number\">1<\/span>],\n];\n\nusort($tasks, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-params\">($a, $b)<\/span> <\/span>{\n\t<span class=\"hljs-keyword\">return<\/span> $a&#91;<span class=\"hljs-number\">1<\/span>] &lt;=&gt; $b&#91;<span class=\"hljs-number\">1<\/span>];\n});\n\nprint_r($tasks);<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we use the spaceship operator (<code>&lt;=&gt;<\/code>), which has been available since PHP 7, to compare the time spent for each task and sort the tasks by hours.<\/p>\n\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">Array<\/span>\n(\n    &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; <span class=\"hljs-keyword\">Do<\/span> excercise\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">1<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Learn PHP programming\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">2<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">2<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Practice PHP\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">2<\/span>\n        )\n\n    &#91;<span class=\"hljs-number\">3<\/span>] =&gt; <span class=\"hljs-keyword\">Array<\/span>\n        (\n            &#91;<span class=\"hljs-number\">0<\/span>] =&gt; Work\n            &#91;<span class=\"hljs-number\">1<\/span>] =&gt; <span class=\"hljs-number\">8<\/span>\n        )\n\n)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use an array of arrays to create two or more multidimensional arrays in PHP.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1054\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-multidimensional-array\/\"\n\t\t\t\tdata-post-title=\"PHP Multidimensional Array\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1054\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-multidimensional-array\/\"\n\t\t\t\tdata-post-title=\"PHP Multidimensional Array\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn how to define a PHP multidimensional array and manipulate its elements effectively. Introduction to PHP multidimensional array Typically, you have an array with one dimension. For example: Or Both $scores and $rates are one-dimensional arrays. A multidimensional array is an array that has more than one dimension. For [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":45,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1054","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1054","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1054"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1054\/revisions"}],"predecessor-version":[{"id":2014,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1054\/revisions\/2014"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1054"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}