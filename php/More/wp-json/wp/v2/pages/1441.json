{"id":1441,"date":"2021-05-05T13:40:44","date_gmt":"2021-05-05T13:40:44","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1441"},"modified":"2021-06-27T14:13:13","modified_gmt":"2021-06-27T14:13:13","slug":"php-substr","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-substr\/","title":{"rendered":"PHP substr"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PHP <code>substr()<\/code> function to extract a substring from a string.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP substr() function<\/h2>\n\n\n\n<p>The <code>substr()<\/code> function accepts a <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-string\/\">string<\/a> and returns a substring from the string. <\/p>\n\n\n\n<p>Here&#8217;s the syntax of the <code>substr()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">substr ( string $string , int $offset , int|<span class=\"hljs-keyword\">null<\/span> $length = <span class=\"hljs-keyword\">null<\/span> ) : string<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$string<\/code> is the input string.<\/li><li><code>$offset<\/code> is the position at which the function begins to extract the substring.<\/li><li><code>$length<\/code> is the number of characters to include in the substring. If you omit the <code>$length<\/code> argument, the <code>substr()<\/code> function will extract a substring from the <code>$offset<\/code> to the end of the <code>$string<\/code>. If the <code>$length<\/code> is 0, false, or null, the <code>substr()<\/code> function returns an empty string.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">PHP substr() function examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>substr()<\/code> function.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Simple PHP substr() function example<\/h3>\n\n\n\n<p>The following example uses the <code>substr()<\/code> function to extract the first three characters from a string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$s = <span class=\"hljs-string\">'PHP substring'<\/span>;\n$result = substr($s, <span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">3<\/span>); \n\n<span class=\"hljs-keyword\">echo<\/span> $result;<span class=\"hljs-comment\">\/\/ PHP<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>substr()<\/code> function extract the first 3 characters from the <code>'PHP substring'<\/code> string starting at the index 0.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"604\" height=\"271\" src=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr.png\" alt=\"PHP substr() function\" class=\"wp-image-1457\" srcset=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr.png 604w, https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-300x135.png 300w\" sizes=\"auto, (max-width: 604px) 100vw, 604px\" \/><\/figure>\n\n\n\n<h3 class=\"wp-block-heading\">2) Using PHP substr() function with the default length argument<\/h3>\n\n\n\n<p>The following example uses the <code>substr()<\/code> function to extract a substring from the <code>'PHP substring'<\/code> string starting from the index 4 to the end of the string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$s = <span class=\"hljs-string\">'PHP substring'<\/span>;\n$result = substr($s, <span class=\"hljs-number\">4<\/span>);\n\n<span class=\"hljs-keyword\">echo<\/span> $result; <span class=\"hljs-comment\">\/\/ substring<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we omit the <code>$length<\/code> argument. Therefore, the <code>substr()<\/code> returns a substring, starting at index 4 to the end of the input string.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"572\" height=\"212\" src=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-default-length.png\" alt=\"PHP substr() function with default length\" class=\"wp-image-1458\" srcset=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-default-length.png 572w, https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-default-length-300x111.png 300w\" sizes=\"auto, (max-width: 572px) 100vw, 572px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">PHP substr() function with negative offset<\/h2>\n\n\n\n<p>The <code>$offset<\/code> argument can be a negative number. If the <code>$offset<\/code> is negative, the <code>substr()<\/code> function returns a substring that starts at the offset character from the end of the string. The last character in the input string has an index of <code>-1<\/code>.<\/p>\n\n\n\n<p>The following example illustrates how to use the <code>substr()<\/code> function with negative offset:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$s = <span class=\"hljs-string\">'PHP is cool'<\/span>;\n$result = substr($s, <span class=\"hljs-number\">-4<\/span>);\n\n<span class=\"hljs-keyword\">echo<\/span> $result; <span class=\"hljs-comment\">\/\/ cool<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>substr()<\/code> returns a substring that at 4th character from the end of the string.<\/p>\n\n\n\n<p>The following picture illustrates how the <code>substr()<\/code> function works in the above example:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"602\" height=\"219\" src=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-negative-offset.png\" alt=\"PHP substr() function with negative offset\" class=\"wp-image-1456\" srcset=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-negative-offset.png 602w, https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-negative-offset-300x109.png 300w\" sizes=\"auto, (max-width: 602px) 100vw, 602px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">PHP substr() function with negative length<\/h2>\n\n\n\n<p>Like the <code>$offset<\/code> argument, the <code>$length<\/code> argument can be negative. If you pass a negative number to the <code>$length<\/code> argument, the <code>substr()<\/code> function will omit a <code>$length<\/code> number of characters in the returned substring.<\/p>\n\n\n\n<p>The following example illustrates how to use the <code>substr()<\/code> with a negative <code>$offset<\/code> and <code>$length<\/code> arguments:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$s = <span class=\"hljs-string\">'PHP is cool'<\/span>;\n$result = substr($s, <span class=\"hljs-number\">-7<\/span>, <span class=\"hljs-number\">-5<\/span>);\n\n<span class=\"hljs-keyword\">echo<\/span> $result; <span class=\"hljs-comment\">\/\/ is<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following picture illustrates how the above example works:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"642\" height=\"219\" src=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-Negative-Length.png\" alt=\"PHP substr() function with negative length\" class=\"wp-image-1455\" srcset=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-Negative-Length.png 642w, https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/05\/php-substr-Negative-Length-300x102.png 300w\" sizes=\"auto, (max-width: 642px) 100vw, 642px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">The PHP mb_substr() function<\/h2>\n\n\n\n<p>See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$message = <span class=\"hljs-string\">'adi\u00f3s'<\/span>;\n$result = substr($message, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">1<\/span>);\n\n<span class=\"hljs-keyword\">echo<\/span> $result;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This example attempts to extract a substring with one character in the <code>$message<\/code> string starting at index 3. However, it shows nothing in the output.<\/p>\n\n\n\n<p>The reason is that the <code>$message<\/code> string contains a non-ASCII character. Therefore, the <code>substr()<\/code> function doesn&#8217;t work correctly.<\/p>\n\n\n\n<p>To extract a substring from a string that contains a non-ASCII character, you use the <code>mb_substr()<\/code> function. The <code>mb_substr()<\/code> function is like the <code>substr()<\/code> function except that it has an additional encoding argument:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">mb_substr ( string $string , int $start , int|<span class=\"hljs-keyword\">null<\/span> $length = <span class=\"hljs-keyword\">null<\/span> , string|<span class=\"hljs-keyword\">null<\/span> $encoding = <span class=\"hljs-keyword\">null<\/span> ) : string<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>mb_substr()<\/code> function to extract a substring from a string with non-ASCII code:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$message = <span class=\"hljs-string\">'adi\u00f3s'<\/span>;\n$result = mb_substr($message, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">1<\/span>);\n\n<span class=\"hljs-keyword\">echo<\/span> $result;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">\u00f3<\/code><\/span><\/pre>\n\n\n<h3 class=\"wp-block-heading\">PHP substr helper function<\/h3>\n\n\n\n<p>The following defines a helper function that uses the <code>mb_substr()<\/code> function to extract a substring from a string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">substring<\/span><span class=\"hljs-params\">($string, $start, $length = null)<\/span>\n<\/span>{\n\t<span class=\"hljs-keyword\">return<\/span> mb_substr($string, $start, $length, <span class=\"hljs-string\">'UTF-8'<\/span>);\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the PHP <code>substr()<\/code> function to extract a substring from a string.<\/li><li>Use the negative offset to extract a substring from the end of the string. The last character in the input string has an index of <code>-1<\/code>.<\/li><li>Use the negative length to omit a length number of characters in the returned substring.<\/li><li>Use the PHP <code>mb_substr()<\/code> function to extract a substring from a string with non-ASCII characters.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1441\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-substr\/\"\n\t\t\t\tdata-post-title=\"PHP substr\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1441\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-substr\/\"\n\t\t\t\tdata-post-title=\"PHP substr\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the PHP substr() function to extract a substring from a string.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":109,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1441","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1441","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1441"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1441\/revisions"}],"predecessor-version":[{"id":2063,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1441\/revisions\/2063"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1441"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}