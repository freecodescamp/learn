{"id":1164,"date":"2021-04-17T07:55:57","date_gmt":"2021-04-17T07:55:57","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=1164"},"modified":"2021-05-09T07:49:17","modified_gmt":"2021-05-09T07:49:17","slug":"php-download-file","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-download-file\/","title":{"rendered":"PHP Download File"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to download a file in PHP using the <code>readfile()<\/code> function.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP readfile() function<\/h2>\n\n\n\n<p>The <code>readfile()<\/code> function reads data from a file and writes it to the output buffer. <\/p>\n\n\n\n<p>Here&#8217;s the syntax of the <code>readfile()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">readfile ( \n    string $filename , \n    bool $use_include_path = <span class=\"hljs-keyword\">false<\/span> , \n    resource $context = ? \n) : int|<span class=\"hljs-keyword\">false<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>readfile()<\/code> function has the following parameters:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$filename<\/code> is the path to the file.<\/li><li><code>$use_include_path<\/code> if set to <code>true<\/code>, the function will search for the file in the include path.<\/li><li><code>$context<\/code> specifies the stream context.<\/li><\/ul>\n\n\n\n<p>The <code>readfile()<\/code> function returns the number of bytes if it successfully reads data from the file, or <code>false<\/code> if it fails to read.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP download file example<\/h2>\n\n\n\n<p>The following example shows how to download the <code>readme.pdf<\/code> file using the <code>readfile()<\/code> function example.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$filename = <span class=\"hljs-string\">'readme.pdf'<\/span>;\n\n<span class=\"hljs-keyword\">if<\/span> (file_exists($filename)) {\n\theader(<span class=\"hljs-string\">'Content-Description: File Transfer'<\/span>);\n\theader(<span class=\"hljs-string\">'Content-Type: application\/octet-stream'<\/span>);\n\theader(<span class=\"hljs-string\">'Content-Disposition: attachment; filename=\"'<\/span> . basename($filename) . <span class=\"hljs-string\">'\"'<\/span>);\n\theader(<span class=\"hljs-string\">'Expires: 0'<\/span>);\n\theader(<span class=\"hljs-string\">'Cache-Control: must-revalidate'<\/span>);\n\theader(<span class=\"hljs-string\">'Pragma: public'<\/span>);\n\theader(<span class=\"hljs-string\">'Content-Length: '<\/span> . filesize($filename));\n\treadfile($filename);\n\t<span class=\"hljs-keyword\">exit<\/span>;\n}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">PHP download file with a download rate limit<\/h2>\n\n\n\n<p>To set a download rate limit, you use the following script:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$file_to_download = <span class=\"hljs-string\">'book.pdf'<\/span>;\n$client_file = <span class=\"hljs-string\">'mybook.pdf'<\/span>;\n\n$download_rate = <span class=\"hljs-number\">200<\/span>; <span class=\"hljs-comment\">\/\/ 200Kb\/s<\/span>\n\n$f = <span class=\"hljs-keyword\">null<\/span>;\n\n<span class=\"hljs-keyword\">try<\/span> {\n\t<span class=\"hljs-keyword\">if<\/span> (!file_exists($file_to_download)) {\n\t\t<span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-keyword\">Exception<\/span>(<span class=\"hljs-string\">'File '<\/span> . $file_to_download . <span class=\"hljs-string\">' does not exist'<\/span>);\n\t}\n\n\t<span class=\"hljs-keyword\">if<\/span> (!is_file($file_to_download)) {\n\t\t<span class=\"hljs-keyword\">throw<\/span> <span class=\"hljs-keyword\">new<\/span> <span class=\"hljs-keyword\">Exception<\/span>(<span class=\"hljs-string\">'File '<\/span> . $file_to_download . <span class=\"hljs-string\">' is not valid'<\/span>);\n\t}\n\n\theader(<span class=\"hljs-string\">'Cache-control: private'<\/span>);\n\theader(<span class=\"hljs-string\">'Content-Type: application\/octet-stream'<\/span>);\n\theader(<span class=\"hljs-string\">'Content-Length: '<\/span> . filesize($file_to_download));\n\theader(<span class=\"hljs-string\">'Content-Disposition: filename='<\/span> . $client_file);\n\n\t<span class=\"hljs-comment\">\/\/ flush the content to the web browser<\/span>\n\tflush();\n\n\t$f = fopen($file_to_download, <span class=\"hljs-string\">'r'<\/span>);\n\n\t<span class=\"hljs-keyword\">while<\/span> (!feof($f)) {\n\t\t<span class=\"hljs-comment\">\/\/ send the file part to the web browser<\/span>\n\t\t<span class=\"hljs-keyword\">print<\/span> fread($f, round($download_rate * <span class=\"hljs-number\">1024<\/span>));\n\n\t\t<span class=\"hljs-comment\">\/\/ flush the content to the web browser<\/span>\n\t\tflush();\n\n\t\t<span class=\"hljs-comment\">\/\/ sleep one second<\/span>\n\t\tsleep(<span class=\"hljs-number\">1<\/span>);\n\t}\n} <span class=\"hljs-keyword\">catch<\/span> (\\Throwable $e) {\n\t<span class=\"hljs-keyword\">echo<\/span> $e-&gt;getMessage();\n} <span class=\"hljs-keyword\">finally<\/span> {\n\t<span class=\"hljs-keyword\">if<\/span> ($f) {\n\t\tfclose($f);\n\t}\n}\n<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, define the path to the file (<code>$file_to_download<\/code>) to download and the name of the downloaded file (<code>$client_file<\/code>).<\/li><li>Next, define the download rate (<code>$download_rate<\/code>) and set it to 200 Kb\/s<\/li><li>Then, throw an exception if the file doesn&#8217;t <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-file-exists\/\">exist<\/a> or is not a regular file.<\/li><li>After that, read the part of the file and sleep for 1 second until the no more file data to read.<\/li><li>Finally, close the file using the <code>fclose()<\/code> function.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the <code>readfile()<\/code> function to force a file download in PHP.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1164\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-download-file\/\"\n\t\t\t\tdata-post-title=\"PHP Download File\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1164\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-download-file\/\"\n\t\t\t\tdata-post-title=\"PHP Download File\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to download a file in PHP using the readfile() function.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":149,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-1164","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1164","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=1164"}],"version-history":[{"count":2,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1164\/revisions"}],"predecessor-version":[{"id":1586,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/1164\/revisions\/1586"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=1164"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}