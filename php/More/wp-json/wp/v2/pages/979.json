{"id":979,"date":"2021-04-09T04:45:23","date_gmt":"2021-04-09T04:45:23","guid":{"rendered":"https:\/\/www.CodeCamp\/?page_id=979"},"modified":"2021-08-01T02:48:38","modified_gmt":"2021-08-01T02:48:38","slug":"php-form-validation","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-form-validation\/","title":{"rendered":"PHP Form Validation"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about PHP form validation, how to validate form data, and how to show error messages if the user inputs are invalid.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to PHP form validation<\/h2>\n\n\n\n<p>When processing a form, it&#8217;s critical to validate user inputs to ensure that the data is in a valid format.<\/p>\n\n\n\n<p>There are two types of validations: client-side &amp; server-side:<\/p>\n\n\n\n<p>The client-side validation is performed in the web browsers of the users. To validate data at the client side, you can use HTML5 validation or <a href=\"https:\/\/www.javascripttutorial.net\/javascript-dom\/javascript-form\/\" target=\"_blank\" rel=\"noreferrer noopener\">JavaScript<\/a>. The client-side validation aims to assist legitimate users in entering data in the valid format before submitting it to the server. <\/p>\n\n\n\n<p>However, client-side validation doesn&#8217;t prevent malicious users from submitting data that can potentially exploit the application.<\/p>\n\n\n\n<p>The server-side validation validates data in the web server using PHP. To validate data in PHP, you can use the <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-filter_var\/\">filter_var()<\/a><\/code> and <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-filter_input\/\">filter_input()<\/a><\/code> functions.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP form validation example<\/h2>\n\n\n\n<p>We&#8217;ll build an email <a href=\"https:\/\/www.CodeCamp\/app\/newsletter\/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">subscription form<\/a> that includes a validation feature. The form has the name and email input elements and a submit button:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/www.CodeCamp\/app\/newsletter\/\" target=\"_blank\" rel=\"noopener\"><img loading=\"lazy\" decoding=\"async\" width=\"358\" height=\"416\" src=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/04\/PHP-Form-Validation-Email-Subscription-Form.png\" alt=\"PHP form validation\" class=\"wp-image-983\" srcset=\"https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/04\/PHP-Form-Validation-Email-Subscription-Form.png 358w, https:\/\/www.CodeCamp\/wp-content\/uploads\/2021\/04\/PHP-Form-Validation-Email-Subscription-Form-258x300.png 258w\" sizes=\"auto, (max-width: 358px) 100vw, 358px\" \/><\/a><\/figure><\/div>\n\n\n\n<p>If you don&#8217;t enter the name and\/or email and click the subscribe button, the form will show the error messages. Also, if you enter an invalid email address, the form will show a different error message.<\/p>\n\n\n\n<p class=\"note\">Notice that we don&#8217;t use the client-side validation for this form to make it easier to test. In practice, you should also use client-side validation.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Organize the directory and files<\/h3>\n\n\n\n<p>First, create a file and directory structure as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\">.\n\u251c\u2500\u2500 css\n\u2502   \u2514\u2500\u2500 style.css\n\u251c\u2500\u2500 inc\n\u2502   \u251c\u2500\u2500 get.php\n\u2502   \u251c\u2500\u2500 post.php\n\u2502   \u251c\u2500\u2500 header.php\n\u2502   \u251c\u2500\u2500 footer.php\n\u2502   \u2514\u2500\u2500 .htaccess\n\u2514\u2500\u2500 index.php<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following table describes the purpose of each file:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>File<\/th><th>Directory<\/th><th>Description<\/th><\/tr><\/thead><tbody><tr><td>index.php<\/td><td>.<\/td><td>Contain the main logic of the form<\/td><\/tr><tr><td>header.php<\/td><td>inc<\/td><td>Contain the header code<\/td><\/tr><tr><td>footer.php<\/td><td>inc<\/td><td>Contain the footer code<\/td><\/tr><tr><td>get.php<\/td><td>inc<\/td><td>Contain the email subscription form<\/td><\/tr><tr><td>post.php<\/td><td>inc<\/td><td>Contain the code for handling form submission<\/td><\/tr><tr><td>style.css<\/td><td>css<\/td><td>Contain the CSS code<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h3 class=\"wp-block-heading\">header.php<\/h3>\n\n\n\n<p>The following shows the <code>header.php<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html<\/span> <span class=\"hljs-attr\">lang<\/span>=<span class=\"hljs-string\">\"en\"<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">charset<\/span>=<span class=\"hljs-string\">\"UTF-8\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"viewport\"<\/span> <span class=\"hljs-attr\">content<\/span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link<\/span> <span class=\"hljs-attr\">rel<\/span>=<span class=\"hljs-string\">\"stylesheet\"<\/span> <span class=\"hljs-attr\">href<\/span>=<span class=\"hljs-string\">\"css\/style.css\"<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title<\/span>&gt;<\/span>Subscribe<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">title<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">head<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">main<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>header.php<\/code> file link to the <code>style.css<\/code> file in the <code>css<\/code> directory.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">footer.php<\/h3>\n\n\n\n<p>And the <code>footer.php<\/code> only contains the enclosing tags that correspond to the opening tags in the <code>header.php<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">main<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">body<\/span>&gt;<\/span>\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">html<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">index.php<\/h3>\n\n\n\n<p>The <code>index.php<\/code> file contains the main logic of the form:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n<span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-keyword\">__DIR__<\/span> . <span class=\"hljs-string\">'\/inc\/header.php'<\/span>;\r\n\r\n$errors = &#91;];\r\n$inputs = &#91;];\r\n\r\n$request_method = strtoupper($_SERVER&#91;<span class=\"hljs-string\">'REQUEST_METHOD'<\/span>]);\r\n\r\n<span class=\"hljs-keyword\">if<\/span> ($request_method === <span class=\"hljs-string\">'GET'<\/span>) {\r\n    <span class=\"hljs-comment\">\/\/ show the form<\/span>\r\n    <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-keyword\">__DIR__<\/span> . <span class=\"hljs-string\">'\/inc\/get.php'<\/span>;\r\n} <span class=\"hljs-keyword\">elseif<\/span> ($request_method === <span class=\"hljs-string\">'POST'<\/span>) {\r\n    <span class=\"hljs-comment\">\/\/ handle the form submission<\/span>\r\n    <span class=\"hljs-keyword\">require<\/span>    <span class=\"hljs-keyword\">__DIR__<\/span> .  <span class=\"hljs-string\">'\/inc\/post.php'<\/span>;\r\n    <span class=\"hljs-comment\">\/\/ show the form if the error exists<\/span>\r\n    <span class=\"hljs-keyword\">if<\/span> (count($errors) &gt; <span class=\"hljs-number\">0<\/span>) {\r\n        <span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-keyword\">__DIR__<\/span> . <span class=\"hljs-string\">'\/inc\/get.php'<\/span>;\r\n    }\r\n}\r\n\r\n<span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-keyword\">__DIR__<\/span> .  <span class=\"hljs-string\">'\/inc\/footer.php'<\/span>;\r\n<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How the <code>index.php<\/code> works.<\/p>\n\n\n\n<p>First, load code from both <code>header.php<\/code> and <code>footer.php<\/code> files using the <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-require\/\">require<\/a><\/code> construct at the top and bottom of the file to generate the header and footer.<\/p>\n\n\n\n<p>Second, define the <code>$errors<\/code> array to store error messages and the <code>$inputs<\/code> array to store the entered form values. If an input element has invalid data, the <code>index.php<\/code> will show the entered value stored in the <code>$inputs<\/code>.<\/p>\n\n\n\n<p>Third, show the form if the HTTP request method is GET by loading the get.php file. Once you enter the <\/p>\n\n\n\n<p>Finally, load the code in the <code>post.php<\/code> to handle the form submission if the HTTP request method is POST. If the form has any errors, the <code>$errors<\/code> will not empty. In this case, show the form again with the error messages stored in the <code>$errors<\/code> array and entered values stored in the <code>$inputs<\/code> arrays.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">get.php<\/h3>\n\n\n\n<p>The <code>get.php<\/code> file contains the form:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form<\/span> <span class=\"hljs-attr\">action<\/span>=<span class=\"hljs-string\">\"&lt;?php echo htmlspecialchars($_SERVER&#91;'PHP_SELF']) ?&gt;\"<\/span> <span class=\"hljs-attr\">method<\/span>=<span class=\"hljs-string\">\"post\"<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">header<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1<\/span>&gt;<\/span>Get FREE Updates<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">h1<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span>&gt;<\/span>Join us for FREE to get email updates!<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">header<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label<\/span> <span class=\"hljs-attr\">for<\/span>=<span class=\"hljs-string\">\"name\"<\/span>&gt;<\/span>Name:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">label<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"text\"<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"name\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"name\"<\/span> <span class=\"hljs-attr\">placeholder<\/span>=<span class=\"hljs-string\">\"Full Name\"<\/span> <span class=\"hljs-attr\">value<\/span>=<span class=\"hljs-string\">\"&lt;?php echo $inputs&#91;'name'] ?? '' ?&gt;\"<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"&lt;?php echo isset($errors&#91;'name']) ? 'error' : ''  ?&gt;\"<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">small<\/span>&gt;<\/span><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">echo<\/span> $errors&#91;<span class=\"hljs-string\">'name'<\/span>] ?? <span class=\"hljs-string\">''<\/span> <span class=\"hljs-meta\">?&gt;<\/span><\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">small<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label<\/span> <span class=\"hljs-attr\">for<\/span>=<span class=\"hljs-string\">\"name\"<\/span>&gt;<\/span>Email:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">label<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"text\"<\/span> <span class=\"hljs-attr\">name<\/span>=<span class=\"hljs-string\">\"email\"<\/span> <span class=\"hljs-attr\">id<\/span>=<span class=\"hljs-string\">\"email\"<\/span> <span class=\"hljs-attr\">placeholder<\/span>=<span class=\"hljs-string\">\"Email Address\"<\/span> <span class=\"hljs-attr\">value<\/span>=<span class=\"hljs-string\">\"&lt;?php echo $inputs&#91;'email'] ?? '' ?&gt;\"<\/span> <span class=\"hljs-attr\">class<\/span>=<span class=\"hljs-string\">\"&lt;?php echo isset($errors&#91;'email']) ? 'error' : '' ?&gt;\"<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">small<\/span>&gt;<\/span><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">echo<\/span> $errors&#91;<span class=\"hljs-string\">'email'<\/span>] ?? <span class=\"hljs-string\">''<\/span> <span class=\"hljs-meta\">?&gt;<\/span><\/span><span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">small<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">div<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button<\/span> <span class=\"hljs-attr\">type<\/span>=<span class=\"hljs-string\">\"submit\"<\/span>&gt;<\/span>Subscribe<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">button<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">form<\/span>&gt;<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How the <code>get.php<\/code> works.<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>First, fill the name and email input elements with the entered values stored in the <code>$inputs<\/code> array only if these values exist.<\/li><li>Second, show the error messages stored in the <code>$errors<\/code> array if they exists.<\/li><\/ul>\n\n\n\n<h3 class=\"wp-block-heading\">post.php<\/h3>\n\n\n\n<p>The following shows the code of the <code>post.php<\/code> file. The <code>post.php<\/code> validates the form data using the <code>filter_input()<\/code> and <code>filter_var()<\/code> functions.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span>\r\n\r\n<span class=\"hljs-keyword\">const<\/span> NAME_REQUIRED = <span class=\"hljs-string\">'Please enter your name'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> EMAIL_REQUIRED = <span class=\"hljs-string\">'Please enter your email'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> EMAIL_INVALID = <span class=\"hljs-string\">'Please enter a valid email'<\/span>;\r\n\r\n<span class=\"hljs-comment\">\/\/ sanitize and validate name<\/span>\r\n$name = filter_input(INPUT_POST, <span class=\"hljs-string\">'name'<\/span>, FILTER_SANITIZE_STRING);\r\n$inputs&#91;<span class=\"hljs-string\">'name'<\/span>] = $name;\r\n\r\n<span class=\"hljs-keyword\">if<\/span> ($name) {\r\n    $name = trim($name);\r\n    <span class=\"hljs-keyword\">if<\/span> ($name === <span class=\"hljs-string\">''<\/span>) {\r\n        $errors&#91;<span class=\"hljs-string\">'name'<\/span>] = NAME_REQUIRED;\r\n    }\r\n} <span class=\"hljs-keyword\">else<\/span> {\r\n    $errors&#91;<span class=\"hljs-string\">'name'<\/span>] = NAME_REQUIRED;\r\n}\r\n\r\n\r\n<span class=\"hljs-comment\">\/\/ sanitize &amp; validate email<\/span>\r\n$email = filter_input(INPUT_POST, <span class=\"hljs-string\">'email'<\/span>, FILTER_SANITIZE_EMAIL);\r\n$inputs&#91;<span class=\"hljs-string\">'email'<\/span>] = $email;\r\n<span class=\"hljs-keyword\">if<\/span> ($email) {\r\n    <span class=\"hljs-comment\">\/\/ validate email<\/span>\r\n    $email = filter_var($email, FILTER_VALIDATE_EMAIL);\r\n    <span class=\"hljs-keyword\">if<\/span> ($email === <span class=\"hljs-keyword\">false<\/span>) {\r\n        $errors&#91;<span class=\"hljs-string\">'email'<\/span>] = EMAIL_INVALID;\r\n    }\r\n} <span class=\"hljs-keyword\">else<\/span> {\r\n    $errors&#91;<span class=\"hljs-string\">'email'<\/span>] = EMAIL_REQUIRED;\r\n}\r\n<span class=\"hljs-meta\">?&gt;<\/span><\/span>\r\n\r\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">if<\/span> (count($errors) === <span class=\"hljs-number\">0<\/span>) : <span class=\"hljs-meta\">?&gt;<\/span><\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2<\/span>&gt;<\/span>\r\n            Thanks <span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">echo<\/span> htmlspecialchars($name) <span class=\"hljs-meta\">?&gt;<\/span><\/span> for your subscription!\r\n        <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">h2<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span>&gt;<\/span>Please follow the steps below to complete your subscription:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ol<\/span>&gt;<\/span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span>Check your email (<span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">echo<\/span> htmlspecialchars($email) <span class=\"hljs-meta\">?&gt;<\/span><\/span>) - Find the message sent from webmaster@CodeCamp<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span>Click to confirm - Click on the link in the email to confirm your subscription.<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">ol<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">section<\/span>&gt;<\/span>\r\n\r\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">endif<\/span> <span class=\"hljs-meta\">?&gt;<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, define some constants to store the error messages. In a real-world application, you can store all the messages in a separate file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const<\/span> NAME_REQUIRED = <span class=\"hljs-string\">'Please enter your name'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> EMAIL_REQUIRED = <span class=\"hljs-string\">'Please enter your email'<\/span>;\r\n<span class=\"hljs-keyword\">const<\/span> EMAIL_INVALID = <span class=\"hljs-string\">'Please enter a valid email'<\/span>;\r<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, sanitize and validate the name using the filter_input() function. If the name is empty, add an error message to the <code>$errors<\/code> array.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-comment\">\/\/ sanitize and validate name<\/span>\r\n$name = filter_input(INPUT_POST, <span class=\"hljs-string\">'name'<\/span>, FILTER_SANITIZE_STRING);\r\n$inputs&#91;<span class=\"hljs-string\">'name'<\/span>] = $name;\r\n\r\n<span class=\"hljs-keyword\">if<\/span> ($name) {\r\n    $name = trim($name);\r\n    <span class=\"hljs-keyword\">if<\/span> ($name === <span class=\"hljs-string\">''<\/span>) {\r\n        $errors&#91;<span class=\"hljs-string\">'name'<\/span>] = NAME_REQUIRED;\r\n    }\r\n} <span class=\"hljs-keyword\">else<\/span> {\r\n    $errors&#91;<span class=\"hljs-string\">'name'<\/span>] = NAME_REQUIRED;\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, sanitize and validate email using the <code>filter_input()<\/code> and <code>filter_var()<\/code> functions. If the email is empty or invalid, add the corresponding error message to the <code>$errors<\/code> array.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-comment\">\/\/ sanitize &amp; validate email<\/span>\r\n$email = filter_input(INPUT_POST, <span class=\"hljs-string\">'email'<\/span>, FILTER_SANITIZE_EMAIL);\r\n$inputs&#91;<span class=\"hljs-string\">'email'<\/span>] = $email;\r\n<span class=\"hljs-keyword\">if<\/span> ($email) {\r\n    <span class=\"hljs-comment\">\/\/ validate email<\/span>\r\n    $email = filter_var($email, FILTER_VALIDATE_EMAIL);\r\n    <span class=\"hljs-keyword\">if<\/span> ($email === <span class=\"hljs-keyword\">false<\/span>) {\r\n        $errors&#91;<span class=\"hljs-string\">'email'<\/span>] = EMAIL_INVALID;\r\n    }\r\n} <span class=\"hljs-keyword\">else<\/span> {\r\n    $errors&#91;<span class=\"hljs-string\">'email'<\/span>] = EMAIL_REQUIRED;\r\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, if the form has no error, show the confirmation message:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><span><code class=\"hljs language-xml\"><span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">if<\/span> (count($errors) === <span class=\"hljs-number\">0<\/span>) : <span class=\"hljs-meta\">?&gt;<\/span><\/span>\r\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2<\/span>&gt;<\/span>\r\n            Thanks <span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">echo<\/span> htmlspecialchars($name) <span class=\"hljs-meta\">?&gt;<\/span><\/span> for your subscription!\r\n        <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">h2<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p<\/span>&gt;<\/span>Please follow the steps below to complete your subscription:<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">p<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ol<\/span>&gt;<\/span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span>Check your email (<span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">echo<\/span> htmlspecialchars($email) <span class=\"hljs-meta\">?&gt;<\/span><\/span>) - Find the message sent from webmaster@CodeCamp<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\r\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li<\/span>&gt;<\/span>Click to confirm - Click on the link in the email to confirm your subscription.<span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">li<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">ol<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\">&lt;\/<span class=\"hljs-name\">section<\/span>&gt;<\/span>\r\n<span class=\"php\"><span class=\"hljs-meta\">&lt;?php<\/span> <span class=\"hljs-keyword\">endif<\/span> <span class=\"hljs-meta\">?&gt;<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To complete the form, you can save the contact data to a database or call an API of an email marketing service to add the contact to your list.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use <code>filter_input() and filter_var()<\/code> functions to validate and sanitize data.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"979\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-form-validation\/\"\n\t\t\t\tdata-post-title=\"PHP Form Validation\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"979\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-form-validation\/\"\n\t\t\t\tdata-post-title=\"PHP Form Validation\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about PHP form validation and show error messages if the user inputs are invalid.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":87,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-979","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/979","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=979"}],"version-history":[{"count":5,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/979\/revisions"}],"predecessor-version":[{"id":2401,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/979\/revisions\/2401"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=979"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}