{"id":2763,"date":"2021-09-27T08:41:06","date_gmt":"2021-09-27T08:41:06","guid":{"rendered":"https:\/\/www.CodeCamp\/php-tutorial\/php-password_verify\/"},"modified":"2021-09-27T08:44:41","modified_gmt":"2021-09-27T08:44:41","slug":"php-password_verify","status":"publish","type":"page","link":"https:\/\/www.CodeCamp\/php-tutorial\/php-password_verify\/","title":{"rendered":"PHP password_verify"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn to use the PHP <code>password_verify()<\/code> function to check if a password matches a hashed password.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the PHP password_verify() function<\/h2>\n\n\n\n<p>When dealing with passwords, you should never store them in the database as plain text. And you should always hash the passwords using a secure one-way hash algorithm.<\/p>\n\n\n\n<p>PHP provided the built-in <code><a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-password_hash\/\">password_hash()<\/a><\/code> function that creates a hash from a plain text password. Note that the <code>password_hash()<\/code> function is a one-way hash function. It means that you cannot find its original value.<\/p>\n\n\n\n<p>To verify if a plain text password matches a hashed password, you must hash the plain text password and compare the hashes.<\/p>\n\n\n\n<p>However, you don&#8217;t have to do it manually since PHP provides you with the built-in <code>password_verify()<\/code> function that allows you to compare a password with a hash:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">password_verify(string $password, string $hash): bool<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>password_verify()<\/code> has two parameters:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>$password<\/code> is a plain text password to match.<\/li><li><code>$hash<\/code> is a hash created by the <code>password_hash()<\/code> function.<\/li><\/ul>\n\n\n\n<p>The <code>password_verify()<\/code> function returns <code>true<\/code> if the password matches the hash or <code>false<\/code> otherwise.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">PHP password_verify() function example<\/h2>\n\n\n\n<p>The following example uses the <code>password_verify()<\/code> function to check if the password Password1 matches a hash:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n$hash = <span class=\"hljs-string\">'$2y$10$hnQY9vdyZUcwzg2CO7ykf.a4iI5ij4Pi5ZwySwplFJM7AKUNUVssO'<\/span>;\n$valid = password_verify(<span class=\"hljs-string\">'Password1'<\/span>, $hash);\n\n<span class=\"hljs-keyword\">echo<\/span> $valid ? <span class=\"hljs-string\">'Valid'<\/span> : <span class=\"hljs-string\">'Not valid'<\/span>;<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">Valid<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In practice, you&#8217;ll use the <code>password_verify()<\/code> function as following to verify a login:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>Find a user from the database by a username (or email)<\/li><li>Use the <code>password_verify()<\/code> function to match the user&#8217;s provided password with a hashed password.<\/li><li>If the password matches the hash, you log the user in. Otherwise, you&#8217;ll issue an error message.<\/li><\/ul>\n\n\n\n<p>The code will look like the following:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n\n<span class=\"hljs-comment\">\/\/ ...<\/span>\n\n$user = find_user_by_username($username);\n\n<span class=\"hljs-keyword\">if<\/span> ($user &amp;&amp; password_verify($password, $user&#91;<span class=\"hljs-string\">'password'<\/span>])) {\n    <span class=\"hljs-comment\">\/\/ log the user in<\/span>\n    session_regenerate_id();\n    $_SESSION&#91;<span class=\"hljs-string\">'user_id'<\/span>] = $user&#91;<span class=\"hljs-string\">'id'<\/span>];\n} <span class=\"hljs-keyword\">else<\/span> {\n    <span class=\"hljs-keyword\">echo<\/span> <span class=\"hljs-string\">'Invalid username or password'<\/span>;\n}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the following tutorial, you&#8217;ll learn to use the <code>password_verify()<\/code> function in the <a href=\"https:\/\/www.CodeCamp\/php-tutorial\/php-login\/\">login form<\/a>.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul class=\"wp-block-list\"><li>Use the PHP <code>password_verify()<\/code> function to check if a password matches a hashed password created by the <code>password_hash()<\/code> function.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial useful?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2763\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-password_verify\/\"\n\t\t\t\tdata-post-title=\"PHP password_verify\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2763\"\n\t\t\t\tdata-post-url=\"https:\/\/www.CodeCamp\/php-tutorial\/php-password_verify\/\"\n\t\t\t\tdata-post-title=\"PHP password_verify\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\n\t\t\t<button class=\"btn btn-primary wth-btn-submit\">Send<\/button>\n\t\t\t<button class=\"btn wth-btn-cancel\">Cancel<\/button>\n\t\t\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn to use the PHP password_verify() function to check if a password matches a hashed password.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":15,"menu_order":102,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"class_list":["post-2763","page","type-page","status-publish","hentry"],"_links":{"self":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2763","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/comments?post=2763"}],"version-history":[{"count":2,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2763\/revisions"}],"predecessor-version":[{"id":2765,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/2763\/revisions\/2765"}],"up":[{"embeddable":true,"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/pages\/15"}],"wp:attachment":[{"href":"https:\/\/www.CodeCamp\/wp-json\/wp\/v2\/media?parent=2763"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}